extends layout

block content
  include ./includes/common.pug
  script.
    const setting_maxCount = parseInt("#{api_page.public_apis.db.getassettxes.max_items_per_query}")
    const setting_itemsPerPage = parseInt("#{asset_page.assettxes_table.items_per_page}")
    const lengthMenuOptsAdd = !{JSON.stringify(asset_page.assettxes_table.page_length_options)}
    $(document).ready(function() {
      var rtable = $('#assettxes-table').dataTable({
        autoWidth: true,
        searching: false,
        ordering: false,
        lengthChange: true,
        processing: true,
        serverSide: true,
        iDisplayLength: setting_maxCount < setting_itemsPerPage ? setting_maxCount : setting_itemsPerPage,
        lengthMenu: lengthMenuOptsAdd,
        scrollX: true,
        ajax: {
          url: '/api/getassettxes/#{asset.name}/#{net}',
          beforeSend: function(jqXHR, settings) {
            settings.url = settings.url.substring(0, settings.url.indexOf('?')) + '/' + getParameterByName('start', settings.url) + '/' + getParameterByName('length', settings.url) + '/#{asset.tx_count}' // /type'
            return true
          }
        },
        language: {
          paginate: {
            previous: '<',
            next: '>'
          }
        },
        rowCallback: function(row, data, index) {
          var html = '<strong class="assettx-title">Transaction #{asset.name} (block ' + data[0].blockindex + ')</strong>'
          html += '<br><small class="assettx-id">Time: ' + format_unixtime(data[0].timestamp) + '<br>ID: <a href="/tx/' + data[0].txid + '/#{net}" class="tx">' + data[0].txid + '</a></small>'
          html += '<br><div class="assettx-vout"><b>TxOut</b>'

          var vout_sum = 0
          var vout_cnt = 0
          for (v of data[0].vout) {
            if (v.addresses && v.name && v.tamount && !isNaN(v.tamount)) {
              vout_sum += v.tamount
              vout_cnt += 1
              html += '<br><span class="assettx-addr"><a href="/address/' + v.addresses + '/#{net}" class="address">' + v.addresses + '</a></span>'
              html += '<span class="assettx-amount">' + formatDecimal(v.tamount, 2, 2) + '</span>'
            }
          }
          if (vout_cnt > 1) {
            html += '<br><span class="assettx-addr"><b>Sum:</b></span>'
            html += '<span class="assettx-amount"><b>' + formatDecimal(vout_sum, 2, 2) + '</b></span>'
          }
          html += '</div>'

          var vin_sum = 0
          var vin_cnt = 0
          html += '<br><div class="assettx-vin"><b>TxIn</b>'
          for (v of data[0].vin) {
            console.log("vin: " + JSON.stringify(v))
            if (v.scriptPubKey && v.addresses && v.scriptPubKey.asset && v.scriptPubKey.asset.amount && !isNaN(v.scriptPubKey.asset.amount)) {
              vin_sum += v.scriptPubKey.asset.amount
              vin_cnt += 1
              html += '<br><span class="assettx-addr"><a href="/address/' + v.addresses + '/#{net}" class="address">' + v.addresses + '</a></span>'
              html += '<span class="assettx-amount">' + formatDecimal(v.scriptPubKey.asset.amount, 2, 2) + '</span>'
            }
          }

          if (vin_cnt > 1) {
            html += '<br><span class="assettx-addr"><b>Sum:</b></span>'
            html += '<span class="assettx-amount"><b>' + formatDecimal(vin_sum, 2, 2) + '</b></span>'
          }
          html += '</div>'

          $("td:eq(0)", row).html(html).addClass('text-begin')
        },
        fnDrawCallback: function(settings) {
          enableTooltips()
        }
      })

      var setting_reload_table_seconds = parseInt("#{movement_page.movement_table.reload_table_seconds}")
      if (setting_reload_table_seconds > 0) {
        setInterval( function () {
          rtable.api().ajax.reload(null, false)
        }, (setting_reload_table_seconds * 1000) )
      }

      if ('#{movement_page.page_header.show_last_updated}' == 'true') {
        var lastUpdatedDate = #{(last_updated == null || last_updated == '0' ? 0 : last_updated)}

        if (lastUpdatedDate != 0) {
          $('span#lastUpdatedDate').html(' ' + format_unixtime(lastUpdatedDate))

          if (#{shared_pages.date_time.enable_alt_timezone_tooltips} == true) {
            $('span#lastUpdatedDate').attr('data-bs-toggle', 'tooltip').attr('data-bs-placement', 'auto').attr('title', format_unixtime(lastUpdatedDate, true))
            enableTooltips()
          }
        } else
          $('span#lastUpdatedDate').html(' N/A')
      }
    })
  .col-xs-12.col-md-12
    if settings.anyHeader(asset_page, net)
      #page-header-container(style='align-items:' + (settings.allHeaders(asset_page, net) ? 'flex-start' : 'center'))
        if asset_page.page_header.show_img == true
          #header-img-container
            img#header-img(src=page_title_logo)
        #page-title-container
          if asset_page.page_header.show_title == true
            h3#page-title #{settings.locale.asset_title.replace('{1}', coin.name).replace('{2}', asset.name)}
          if asset_page.page_header.show_description == true
            if asset_page.page_header.show_title != true
              #page-title-container
                .sub-page-header.text-muted=settings.locale.asset_description.replace('{1}', coin.name).replace('{2}', settings.formatDecimal(asset.height, 0, 0))
            else
              .sub-page-header.text-muted=settings.locale.asset_description.replace('{1}', coin.name).replace('{2}', settings.formatDecimal(asset.height, 0, 0))
      .cardSpacer.clearfix
    div#info-table_wrapper.card.card-default.border-0.cardSpacer
      .card-header
      h4 Asset Registration
      hr
      table#asset-summary.table.table-bordered.summary-table.bottom-border-0.single-row-table(style='border-top:0;margin-top:0 !important;')
        thead(style='visibility: collapse !important;')
          tr
            th
            th
        tbody
          - var confirms = (blockcount - asset.blockindex + 1);
          tr
            td.d-md-table-cell Name
            td.breakWord #{asset.name}
          if asset.address 
            tr 
              td.d-md-table-cell Address
              td.breakWord
                a.breakWord(href='/address/' + asset.address + '/' + net) #{asset.address}
          //- if asset.owner
          //-   tr
          //-     td.d-md-table-cell Owner
          //-     td.breakWord #{asset.owner}
          //- if asset.owner_address 
          //-   tr 
          //-     td.d-md-table-cell Owner Address
          //-     td.breakWord
          //-       a.breakWord(href='/address/' + asset.owner_address + '/' + net) #{asset.owner_address}
          if asset.height
            tr
              td.d-md-table-cell Block height
              td.breakWord #{settings.formatDecimal(asset.height, 0, 0)}
          tr
            td.d-md-table-cell Tx-ID
            td.breakWord 
              small
                a(href='/tx/' + asset.txid + '/' + net) #{asset.txid}
          if asset.tx_type != null
            tr
              td.d-md-table-cell #{settings.locale.tx_type}
              td.breakWord #{asset.tx_type} #{tx_types[asset.tx_type]}
          if asset.version != null
            tr
              td.d-md-table-cell #{settings.locale.tx_version}
              td.breakWord #{asset.version}
          if !isNaN(asset.size)
            tr
              td.d-md-table-cell #{settings.locale.tx_size}
              td.breakWord #{asset.size}
          tr
            td.d-md-table-cell #{settings.locale.confirmations}
            td #{settings.formatDecimal(blockcount - asset.height + 1, 0, 0)}
          if asset.amount && asset.units
            tr
              td.d-md-table-cell Amount
              td.breakWord #{settings.formatDecimal(asset.amount, asset.units, asset.units)}
          if asset.balance && asset.units
            tr
              td.d-md-table-cell Balance
              td.breakWord #{settings.formatDecimal(asset.balance, asset.units, asset.units)}
          if asset.units
            tr
              td.d-md-table-cell Units
              td.breakWord #{settings.formatDecimal(asset.units, 0, 0)}
          if asset.expire_time
            tr
              td.d-md-table-cell Expires
              td.breakWord #{settings.formatUnixtime(asset.expire_time / 1000, net, true)}
          if asset.tx_count
            tr
              td.d-md-table-cell Tx count
              td.breakWord #{settings.formatDecimal(asset.tx_count, 0, 0)}
          if !isNaN(asset.timestamp)
            tr
              td.d-md-table-cell #{settings.locale.timestamp}
              td
                span#timestampCol #{settings.formatUnixtime(asset.timestamp, net, true)}
          if !isNaN(asset.locktime)
            tr
              td.d-md-table-cell #{settings.locale.tx_locktime}
              td.breakWord #{settings.formatDecimal(asset.locktime, 0, 0)}
          if asset.instantlock != null
            tr
              td.d-md-table-cell #{settings.locale.tx_instantlock}
              td.breakWord #{asset.instantlock}
          if asset.chainlock != null
            tr
              td.d-md-table-cell #{settings.locale.tx_chainlock}
              td.breakWord #{asset.chainlock}
          if asset.vout != null && Array.isArray(asset.vout) && asset.vout.length > 2
            tr
              td.d-md-table-cell Max supply
              td.breakWord #{settings.formatDecimal(asset.vout[2].tamount, 2, 2)}
          if asset.ipfs_hash
            tr
              td.d-md-table-cell IPFS Hash
              td.breakWord 
                span.ipfs
                  small
                    a(href="https://ipfs.io/ipfs/"+asset.ipfs_hash target="_blank") #{asset.ipfs_hash}
                hr
                br
                img(style="width: 50% !important; border: dashed 1px gray; border-radius: 5%;" src="https://ipfs.io/ipfs/"+asset.ipfs_hash)
      h4 Asset Reissuance (s)
      hr
      p No asset reissuances found.
      hr
      if (asset.latesttx && asset.latesttx.length > 0)
        h4 Latest transactions  
        table#assettxes-table.table.table-bordered.table-paging.mobile-border-right
          thead
            tr
              th.text-center
          tbody
        hr
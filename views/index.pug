extends layout

block content
  include ./includes/common.pug
  script.
    const setting_maxTxCount = parseInt("#{api_page.public_apis.ext.getlasttxs.max_items_per_query}")
    const setting_txPerPage = parseInt("#{index_page.transaction_table.items_per_page}")
    const lengthMenuOptsAdd = !{JSON.stringify(index_page.transaction_table.page_length_options)}
    var lengthMenuOpts = []
    var addedLength = false
    for (i = 0; i < lengthMenuOptsAdd.length; i++) {
      if (setting_maxTxCount >= lengthMenuOptsAdd[i]) {
        if (!addedLength) {
          if (lengthMenuOptsAdd[i] > setting_txPerPage) {
            lengthMenuOpts.push(setting_txPerPage)
            addedLength = true
          }
        }

        lengthMenuOpts.push(lengthMenuOptsAdd[i])

        if (!addedLength) {
          if (lengthMenuOptsAdd[i] > setting_txPerPage)
            lengthMenuOpts.push(setting_txPerPage)
          if (lengthMenuOptsAdd[i] == setting_txPerPage || lengthMenuOptsAdd[i] > setting_txPerPage)
            addedLength = true
        }
      }
    }
    if (!addedLength && setting_txPerPage <= setting_maxTxCount && setting_txPerPage != lengthMenuOpts[lengthMenuOpts.length - 1])
      lengthMenuOpts.push(setting_txPerPage)
    if (!addedLength && setting_txPerPage > setting_maxTxCount && setting_maxTxCount != lengthMenuOpts[lengthMenuOpts.length - 1])
      lengthMenuOpts.push(setting_maxTxCount)
    if (setting_maxTxCount < setting_txPerPage)
      var displayLengthMax = setting_maxTxCount
    else
      var displayLengthMax = setting_txPerPage
    $(document).ready(function() {
      var rtable = $('#recent-table').dataTable({
        autoWidth: true,
        searching: false,
        ordering: false,
        responsive: true,
        lengthChange: true,
        processing: true,
        serverSide: true,
        iDisplayLength: displayLengthMax,
        lengthMenu: lengthMenuOpts,
        scrollX: true,
        ajax: {
          url: '/ext/getlasttxs/#{net}/0',
          beforeSend: function(jqXHR, settings) {
            settings.url = settings.url.substring(0, settings.url.indexOf('?')) + '/' + getParameterByName('start', settings.url) + '/' + getParameterByName('length', settings.url) // '/type'
            return true
          }
        },
        language: {
          paginate: {
            previous: '<',
            next: '>'
          }
        },
        rowCallback: function(row, data, index) {
          const blockindex = data[0]
          const blockhash = data[1]
          const txhash = data[2]
          const txtype = data[3] = data[3].replace('TRANSACTION_', 'TX_')
          const outputs = data[4]
          var amount = Number(data[5]).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true})
          const amountParts = amount.split('.')
          amount = amountParts[0] + '.<span class="decimal">' + amountParts[1] + '</span>'
          const timestamp = data[6]

          $("td:eq(0)", row).html('<a href="/tx/' + txhash + '/#{net}"><span class="entity" data-bs-toggle="tooltip" data-bs-placement="top" title="#{settings.locale.view_tx}">&#8627</span></a>').addClass('text-center d-table-cell d-md-none')
          $("td:eq(1)", row).html('<a href="/block/' + blockhash + '/#{net}">' + blockindex + '</a>')
          $("td:eq(2)", row).html('<a href="/tx/' + txhash + '/#{net}">' + txhash + '</a>').addClass("txcol text-center")
          $("td:eq(3)", row).html('<span>' + txtype + '</span>').addClass("text-begin")
          $("td:eq(4)", row).html('<span>' + outputs + '</span>').addClass("text-center")
          $("td:eq(5)", row).html(amount).addClass("text-end")
          $("td:eq(6)", row).html(format_unixtime(timestamp)).addClass('text-center')
        },
        fnDrawCallback: function(settings) {
          enableTooltips()
        }
      })
      var setting_reload_table_seconds = parseInt("#{index_page.transaction_table.reload_table_seconds}")
      if (setting_reload_table_seconds > 0) {
        setInterval( function () {
          rtable.api().ajax.reload(null, false)
        }, (setting_reload_table_seconds * 1000))
      }

      if ('#{index_page.page_header.show_last_updated}' == 'true') {
        var lastUpdatedDate = #{(last_updated == null || last_updated == '0' ? 0 : last_updated)}
        if (lastUpdatedDate != 0) {
          $('span#lastUpdatedDate').html(' ' + format_unixtime(lastUpdatedDate))

          if (#{shared_pages.date_time.enable_alt_timezone_tooltips} == true) {
            $('span#lastUpdatedDate').attr('data-bs-toggle', 'tooltip').attr('data-bs-placement', 'auto').attr('title', format_unixtime(lastUpdatedDate, true))
            enableTooltips()
          }
        } else
          $('span#lastUpdatedDate').html(' N/A')
      }
    })
  if error !== null
    .col-12
      .alert.alert-danger.alert-dismissible.fade.show(role='alert')
        button.btn-close(type='button', data-bs-dismiss='alert')
        .cardSpacer
          span.fas.fa-exclamation-circle(style='margin-right:5px')
          strong #{settings.locale.ex_error}
        div #{error}
  .col-md-12.cardSpacer
    if settings.anyHeader(index_page, net)
      #page-header-container(style='align-items:' + (settings.allHeaders(index_page, net) ? 'flex-start' : 'center'))
        if index_page.page_header.show_img == true
          #header-img-container
            img#header-img(src=page_title_logo)
        #page-title-container
          if index_page.page_header.show_title == true
            h3#page-title #{settings.locale.ex_title.replace('{1}', coin.name)}
          if index_page.page_header.show_last_updated == true
            if index_page.page_header.show_title != true && index_page.page_header.show_description != true
              #page-title-container
                .sub-page-header
                  span=settings.locale.last_updated + ':'
                  span.text-muted#lastUpdatedDate
            else
              .sub-page-header(style='margin-bottom:' + (index_page.page_header.show_description == true ? '5' : '0') + 'px')
                span=settings.locale.last_updated + ':'
                span.text-muted#lastUpdatedDate
          if index_page.page_header.show_description == true
            if index_page.page_header.show_title != true && index_page.page_header.show_last_updated != true
              #page-title-container
                .sub-page-header.text-muted=settings.locale.ex_description.replace('{1}', coin.name)
            else
              .sub-page-header.text-muted=settings.locale.ex_description.replace('{1}', coin.name)
      .cardSpacer.clearfix
    .card.card-default.border-0.cardSpacer
      .card-header
        strong #{settings.locale.ex_latest_transactions}
      table#recent-table.table.table-bordered.table-striped.table-paging.table-hover
        thead
          tr
            th.d-table-cell.d-md-none
            th.text-center #{settings.locale.ex_block}
            th.text-center #{settings.locale.tx_hash}
            th.text-center #{settings.locale.tx_type}
            th.text-center #{settings.locale.tx_txout}
            th.text-center #{coin.symbol}
            th.text-center #{settings.locale.timestamp}
        tbody
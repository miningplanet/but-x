extends layout

block content
  include ./includes/common.pug
  script.
    var assetItem = ''
    function update_balance_view(item) {
      const index = $("#asset_selector").prop('selectedIndex');
      if (index > 0) {
        if (assetItem.length > 0) {
          update_asset(assetItem, 'none')
        }
        assetItem = item
        update_coin('none')
        update_asset(item, 'table-row')
      } else {
        if (assetItem.length > 0) {
          update_asset(assetItem, 'none')
          assetItem = ''
        }
        update_coin('table-row')
      }
    }
    function update_asset(item, state) {
      document.getElementById('b_asset_' + item).style.display = state
      document.getElementById('s_asset_' + item).style.display = state
      document.getElementById('r_asset_' + item).style.display = state
    }
    function update_coin(state) {
      document.getElementById('b_coin').style.display = state
      document.getElementById('s_coin').style.display = state
      document.getElementById('r_coin').style.display = state
    }
    const hashAddress = "#{address.a_id}"
    const setting_maxCount = parseInt("#{api_page.public_apis.ext.getaddresstxs.max_items_per_query}")
    const setting_itemsPerPage = parseInt("#{address_page.history_table.items_per_page}")
    const lengthMenuOptsAdd = !{JSON.stringify(address_page.history_table.page_length_options)}
    $(document).ready(function () {
      var rtable = $('#address-txs').dataTable({
        autoWidth: true,
        searching: false,
        ordering: false,
        responsive: true,
        lengthChange: true,
        processing: true,
        serverSide: true,
        iDisplayLength: setting_maxCount < setting_itemsPerPage ? setting_maxCount : setting_itemsPerPage,
        lengthMenu: lengthMenuOptsAdd,
        scrollX: true,
        ajax: {
          url: '/ext/getaddresstxs/' + hashAddress + '/#{net}',
          beforeSend: function(jqXHR, settings) {
            settings.url = settings.url.substring(0, settings.url.indexOf('?')) + '/' + getParameterByName('start', settings.url) + '/' + getParameterByName('length', settings.url) + '/internal'
            return true
          }
        },
        language: {
          paginate: {
            previous: '<',
            next: '>'
          }
        },
        rowCallback: function (row, data, index) {
          const timestamp = data[0]
          const txhash = data[1]
          const txtype = data[2] = data[2].replace('TRANSACTION_', 'TX_')
          const out = data[3]
          const vin = data[4]
          // TODO: Peers: Balance is undefined from upstream peer.
          const balance = data[5] && !isNaN(data[5]) ? data[5].toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true}) : '0.0'
          const balanceParts = balance.split('.')
          $("td:eq(0)", row).html('<a href="/tx/' + txhash + '/#{net}"><span class="entity" data-bs-toggle="tooltip" data-bs-placement="top" title="#{settings.locale.view_tx}">&#8627</span></a>').addClass('text-center d-table-cell d-md-none')
          $("td:eq(1)", row).html('<a href="/tx/' + txhash + '/#{net}">' + txhash + '</a>').addClass('txcol breakWord d-none d-md-table-cell')
          $("td:eq(2)", row).html('<span>' + txtype + '</span>').addClass('text-begin')
          var amount = 0
          var updown = ''

          if (out > 0 && vin > 0) {
            amount = Number(out - vin)
            if (amount < 0) {
              amount = Number(amount * -1).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true})
              updown = '-'
            } else if (amount > 0) {
              amount = amount.toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true})
              updown = '+'
            } else {
              amount = amount.toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true})
            }
          } else if (out > 0) {
            amount = Number(out).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true})
            updown = '+'
          } else {
            amount = Number(vin).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true})
            updown = '-'
          }
          var amountParts = amount.split('.')
          $("td:eq(3)", row).html(updown + amountParts[0] + '.<span class="decimal">' + amountParts[1] + '</span>').addClass('text-end')
          $("td:eq(4)", row).html(balanceParts[0] + '.<span class="decimal">' + balanceParts[1] + '</span>').addClass('text-end')
          $("td:eq(5)", row).html(format_unixtime(timestamp)).addClass('text-center')
        },
        fnDrawCallback: function(settings) {
          enableTooltips()
        }
      })
      $('.summary-table').dataTable({
        info: false,
        paging: false,
        searching: false,
        ordering: false,
        responsive: true,
        scrollX: true,
        fnDrawCallback: function(settings) {}
      })
    })
  - var balance = Number((address.received - address.sent) / 100000000).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true})
  - var balanceParts = balance.split('.')
  - var sent = Number(address.sent /100000000).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true})
  - var sentParts = sent.split('.')
  - var received = Number(address.received / 100000000).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true})
  - var receivedParts = received.split('.')
  .col-xs-12.col-md-12
    if settings.anyHeader(address_page, net)
      #page-header-container(style='align-items:' + (settings.allHeaders(address_page, net) ? 'flex-start' : 'center'))
        if address_page.page_header.show_img == true
          #header-img-container
            img#header-img(src=page_title_logo)
        #page-title-container
          if address_page.page_header.show_title == true
            h3#page-title #{settings.locale.a_title.replace('{1}', coin.name)}
          if address_page.page_header.show_description == true
            if address_page.page_header.show_title != true
              #page-title-container
                .sub-page-header.text-muted=settings.locale.a_description.replace('{1}', coin.name).replace('{2}', (address.a_id == 'hidden_address' ? settings.locale.hidden_address : (address.a_id == 'unknown_address' ? settings.locale.unknown_address : address.a_id)))
            else
              .sub-page-header.text-muted=settings.locale.a_description.replace('{1}', coin.name).replace('{2}', (address.a_id == 'hidden_address' ? settings.locale.hidden_address : (address.a_id == 'unknown_address' ? settings.locale.unknown_address : address.a_id)))
      .cardSpacer.clearfix
    .card.card-default.border-0.card-address-summary.cardSpacer
      .card-header(style='position:relative;')
        if claim_address_page.enabled == false || address.name == null || address.name == ''
          if address.a_id == 'hidden_address'
            strong #{settings.locale.hidden_address}
          else if address.a_id == 'unknown_address'
            strong #{settings.locale.unknown_address}
          else
            strong #{address.a_id}
        else
          strong #{address.name}
        | &#8203;
        include ./includes/rl_labels.pug
        if (!settings.labels[address.a_id] || !settings.labels[address.a_id].enabled) && claim_address_page.enabled == true
          a#claim-address.fw-bold(href='/claim/' + address.a_id, style='font-size:smaller;padding-bottom:0;')
            if address.name == null || address.name == ''
              =" Is this yours? Claim it now for free!"
            else
              =" Update claimed address"
      table#address-summary.table.table-bordered.table-striped.summary-table.mobile-border-right(style='border-top:0;margin-top:0 !important;')
        thead(style='visibility: collapse !important;')
          tr
            th
            th
        tbody
          tr
            td.text-center.addr-summary(colspan=2)
              div.text-center
                img.qrcode(src='/qr/' + address.a_id)
            td(style='display: none')
          if (address.assets && Array.isArray(address.assets) && address.assets.length > 0)
            tr 
              td.text-center(colspan=2)
                div.text-center
                  select#asset_selector(onchange="update_balance_view(event.target.value)")
                    option(value=coin.symbol) #{coin.symbol}
                    each asset in address.assets
                      option(value=asset.name) #{asset.name}
              td(style='display: none')
          tr#b_coin
            td#b_label #{settings.locale.rl_balance}
              span.small.fw-normal  (#{coin.symbol})
            td#b_value.addr-summary #{balanceParts[0]}.
              span.decimal #{balanceParts[1]}
          if address_page.show_sent_received == true
            tr#s_coin
              td#s_label #{settings.locale.total_sent}
                span.small.fw-normal  (#{coin.symbol})
              td#s_value.addr-summary #{sentParts[0]}.
                span.decimal #{sentParts[1]}
          if address_page.show_sent_received == true
            tr#r_coin
              td#r_label #{settings.locale.total_received}
                span.small.fw-normal  (#{coin.symbol})
              td#r_value.addr-summary #{receivedParts[0]}.
                span.decimal #{receivedParts[1]}
          if (address.assets && Array.isArray(address.assets) && address.assets.length > 0)
            - var index1 = 0;
            each asset in address.assets
              tr(id="b_asset_" + asset.name, style='display: none')
                td Balance (#{asset.name})
                td #{settings.formatDecimal(asset.balance, 2, 2)}
              tr(id='s_asset_' + asset.name, style='display: none') 
                td Total Sent (#{asset.name})
                td #{settings.formatDecimal(asset.sent, 2, 2)}
              tr(id='r_asset_' + asset.name, style='display: none') 
                td Total Received (#{asset.name})
                td #{settings.formatDecimal(asset.received, 2, 2)}
    .card.card-default.border-0.cardSpacer
      .card-header
        strong #{settings.locale.ex_latest_transactions}
      table#address-txs.table.table-bordered.table-paging.mobile-border-right
        thead
          tr
            th.d-table-cell.d-md-none
            th.d-none.d-md-table-cell #{settings.locale.tx_hash}
            th.d-none.d-md-table-cell #{settings.locale.tx_type}
            th.text-center #{coin.symbol}
            th.text-center #{settings.locale.rl_balance}
            th.text-center #{settings.locale.timestamp}
        tbody
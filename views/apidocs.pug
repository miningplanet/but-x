extends layout

block content
  - const getblockchaininfo       = isApiEndpointEnabled(api_page, api_cmds, 'getblockchaininfo')
  - const getmininginfo           = isApiEndpointEnabled(api_page, api_cmds, 'getmininginfo')
  - const getdifficulty           = isApiEndpointEnabled(api_page, api_cmds, 'getdifficulty')
  - const getconnectioncount      = isApiEndpointEnabled(api_page, api_cmds, 'getconnectioncount')
  - const getblockcount           = isApiEndpointEnabled(api_page, api_cmds, 'getblockcount')
  - const getblockhash            = isApiEndpointEnabled(api_page, api_cmds, 'getblockhash')
  - const getblock                = isApiEndpointEnabled(api_page, api_cmds, 'getblock')
  - const getrawtransaction       = isApiEndpointEnabled(api_page, api_cmds, 'getrawtransaction')
  - const getnetworkhashps        = isApiEndpointEnabled(api_page, api_cmds, 'getnetworkhashps')
  - const getvotelist             = isApiEndpointEnabled(api_page, api_cmds, 'getvotelist')
  - const getmasternodecount      = isApiEndpointEnabled(api_page, api_cmds, 'getmasternodecount')
  - const verifymessage           = isApiEndpointEnabled(api_page, api_cmds, 'verifymessage')
  - const validateaddress         = isApiEndpointEnabled(api_page, api_cmds, 'validateaddress')
  - const getgovernanceinfo       = isApiEndpointEnabled(api_page, api_cmds, 'getgovernanceinfo')
  script.
    $(document).ready(function() {
      // NOOP
    });
  .col-md-12.cardSpacer
    if settings.anyHeader(api_page, net)
      #page-header-container(style='align-items:' + (settings.allHeaders(api_page, net) ? 'flex-start' : 'center'))
        if api_page.page_header.show_img == true
          #header-img-container
            img#header-img(src=page_title_logo)
        #page-title-container
          if api_page.page_header.show_title == true
            h3#page-title #{settings.locale.api_title.replace('{1}', coin.name).replace('{2}', net)}
          if api_page.page_header.show_description == true
            if api_page.page_header.show_title != true
              #page-title-container
                .sub-page-header.text-muted=settings.locale.api_description.replace('{1}', coin.name)
            else
              .sub-page-header.text-muted=settings.locale.api_description.replace('{1}', coin.name)
      .cardSpacer.clearfix
    .card.card-default.border-0
      .card-header
        strong #{settings.locale.api_documentation}
      .card-body
        if api_page.show_logo == true
          img(src=settings.getWallet(net).logo_title, style='margin:0;height:128px;')
          hr
        if !api_page.public_apis.hide_rpc_api_section
          h3 #{settings.locale.api_calls}
          p
            em Return data from coind
          ul
            if getblockchaininfo
              li
                p
                  div.fw-bold getblockchaininfo [net]
                  div
                    em #{settings.locale.api_getblockchaininfo}
                  if !isMainnet
                    a(href='/api/getblockchaininfo/' + net) #{address}/api/getblockchaininfo/#{net}
                  else
                    a(href='/api/getblockchaininfo') #{address}/api/getblockchaininfo
            if getmininginfo
              li
                p
                  div.fw-bold getmininginfo [net]
                  div
                    em #{settings.locale.api_getmininginfo}
                  if !isMainnet
                    a(href='/api/getmininginfo/' + net) #{address}/api/getmininginfo/#{net}
                  else
                    a(href='/api/getmininginfo') #{address}/api/getmininginfo
            if getdifficulty
              li
                p
                  div.fw-bold getdifficulty [net]
                  div
                    em #{settings.locale.api_getdifficulty}
                        ul
                          each algo in algos
                            li #{algo.label} (#{algo.type})
                  if !isMainnet
                    a(href='/api/getdifficulty/' + net) #{address}/api/getdifficulty/#{net}
                  else
                    a(href='/api/getdifficulty') #{address}/api/getdifficulty
            if getconnectioncount
              li
                p
                  div.fw-bold getconnectioncount [net]
                  div
                    em #{settings.locale.api_getconnectioncount}
                  if !isMainnet
                    a(href='/api/getconnectioncount/' + net) #{address}/api/getconnectioncount/#{net}
                  else
                    a(href='/api/getconnectioncount') #{address}/api/getconnectioncount
            if getblockcount
              li
                p
                  div.fw-bold getblockcount [net]
                  div
                    em #{settings.locale.api_getblockcount}
                  if !isMainnet
                    a(href='/api/getblockcount/' + net) #{address}/api/getblockcount/#{net}
                  else
                    a(href='/api/getblockcount') #{address}/api/getblockcount
            if getblockhash
              li
                p
                  div.fw-bold getblockhash [net] [index]
                  div
                    em #{settings.locale.api_getblockhash}
                  if !isMainnet
                    a(href='/api/getblockhash/' + api_page.sample_data.blockindex + '/' + net) #{address}/api/getblockhash/#{api_page.sample_data.blockindex}/#{net}
                  else
                    a(href='/api/getblockhash/' + api_page.sample_data.blockindex) #{address}/api/getblockhash/#{api_page.sample_data.blockindex}
            if getblock
              li
                p
                  div.fw-bold getblock [net] [hash]
                  div
                    em #{settings.locale.api_getblock}
                  if !isMainnet
                    a(href='/api/getblock/' + api_page.sample_data.blockhash + '/' + net) #{address}/api/getblock/#{api_page.sample_data.blockhash}/#{net}
                  else
                    a(href='/api/getblock?hash=' + api_page.sample_data.blockhash) #{address}/api/getblock/#{api_page.sample_data.blockhash}
            if getrawtransaction
              li
                p
                  div.fw-bold getrawtransaction [net] [txid] [decrypt]
                  div
                    em #{settings.locale.api_getrawtransaction}
                  div
                    if !isMainnet
                      a(href='/api/getrawtransaction/' + net + '?txid=' + api_page.sample_data.txhash + '&decrypt=0') #{address}/api/getrawtransaction/#{net}?txid=#{api_page.sample_data.txhash}&decrypt=0
                    else
                      a(href='/api/getrawtransaction?txid=' + api_page.sample_data.txhash + '&decrypt=0') #{address}/api/getrawtransaction?txid=#{api_page.sample_data.txhash}&decrypt=0
                  div
                    if !isMainnet
                      a(href='/api/getrawtransaction/' + net + '?txid=' + api_page.sample_data.txhash + '&decrypt=1') #{address}/api/getrawtransaction/#{net}?txid=#{api_page.sample_data.txhash}&decrypt=1
                    else
                      a(href='/api/getrawtransaction?txid=' + api_page.sample_data.txhash + '&decrypt=1') #{address}/api/getrawtransaction?txid=#{api_page.sample_data.txhash}&decrypt=1
            if getnetworkhashps
              li
                p
                  div.fw-bold getnetworkhashps [net]
                  div
                    em #{settings.locale.api_getnetworkhashps}
                      ul
                        each algo in algos
                          li #{algo.label} (#{algo.type})
                  if !isMainnet
                    a(href='/api/getnetworkhashps/' + net) #{address}/api/getnetworkhashps/#{net}
                  else
                    a(href='/api/getnetworkhashps') #{address}/api/getnetworkhashps
            if getvotelist
              li
                p
                  div.fw-bold getvotelist [net]
                  div
                    em #{settings.locale.api_getvotelist}
                  if !isMainnet
                    a(href='/api/getvotelist') #{address}/api/getvotelist/#{net}
                  else
                    a(href='/api/getvotelist') #{address}/api/getvotelist
            if getmasternodecount
              li
                p
                  div.fw-bold getmasternodecount [net]
                  div
                    em #{settings.locale.api_getmasternodecount}
                  if !isMainnet
                    a(href='/api/getmasternodecount/' + net) #{address}/api/getmasternodecount/#{net}
                  else
                    a(href='/api/getmasternodecount') #{address}/api/getmasternodecount
            if verifymessage
              li
                p
                  div.fw-bold verifymessage [net]
                  div
                    em #{settings.locale.api_verifymessage}
                  a(href='/api/verifymessage/' + net + '?address=' + api_page.sample_data.address + '&signature=' + api_page.sample_data.base64UrlEncodedSignature + '&message=' + api_page.sample_data.base64UrlEncodedMessage) #{address}/api/verifymessage/#{net}?address=#{api_page.sample_data.address}&signature=#{api_page.sample_data.base64UrlEncodedSignature}&message=#{api_page.sample_data.base64UrlEncodedMessage}
            if validateaddress
              li
                p
                  div.fw-bold validateaddress [net]
                  div
                    em #{settings.locale.api_validateaddress}
                  a(href='/api/validateaddress/' + net + '?address=' + api_page.sample_data.address) #{address}/api/validateaddress/#{net}?address=#{api_page.sample_data.address}
            if getgovernanceinfo
              li
                p
                  div.fw-bold getgovernanceinfo [net]
                  div
                    em #{settings.locale.api_getgovernanceinfo}
                  a(href='/api/getgovernanceinfo/' + net) #{address}/api/getgovernanceinfo/#{net}
            if settings.blockchain_specific.heavycoin.enabled == true
              if settings.blockchain_specific.heavycoin.public_apis.getmaxmoney.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getmaxmoney'] != null && settings.blockchain_specific.heavycoin.api_cmds['getmaxmoney'] != ''
                li
                  p
                    div.fw-bold getmaxmoney [net]
                    div
                      em #{settings.locale.api_getmaxmoney}
                    if !isMainnet
                      a(href='/api/getmaxmoney') #{address}/api/getmaxmoney/#{net}
                    else
                      a(href='/api/getmaxmoney') #{address}/api/getmaxmoney
              if settings.blockchain_specific.heavycoin.public_apis.getmaxvote.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getmaxvote'] != null && settings.blockchain_specific.heavycoin.api_cmds['getmaxvote'] != ''
                li
                  p
                    div.fw-bold getmaxvote [net]
                    div
                      em #{settings.locale.api_getmaxvote}
                    if !isMainnet
                      a(href='/api/getmaxvote') #{address}/api/getmaxvote/#{net}
                    else
                      a(href='/api/getmaxvote') #{address}/api/getmaxvote
              if settings.blockchain_specific.heavycoin.public_apis.getvote.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getvote'] != null && settings.blockchain_specific.heavycoin.api_cmds['getvote'] != ''
                li
                  p
                    div.fw-bold getvote [net]
                    div
                      em #{settings.locale.api_getvote}
                    if !isMainnet
                      a(href='/api/getvote') #{address}/api/getvote/#{net}
                    else 
                      a(href='/api/getvote') #{address}/api/getvote
              if settings.blockchain_specific.heavycoin.public_apis.getphase.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getphase'] != null && settings.blockchain_specific.heavycoin.api_cmds['getphase'] != ''
                li
                  p
                    div.fw-bold getphase [net]
                    div
                      em #{settings.locale.api_getphase}
                    if !isMainnet
                      a(href='/api/getphase') #{address}/api/getphase/#{net}
                    else
                      a(href='/api/getphase') #{address}/api/getphase
              if settings.blockchain_specific.heavycoin.public_apis.getreward.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getreward'] != null && settings.blockchain_specific.heavycoin.api_cmds['getreward'] != ''
                li
                  p
                    div.fw-bold getreward [net]
                    div
                      em #{settings.locale.api_getreward}
                    if !isMainnet
                      a(href='/api/getreward') #{address}/api/getreward/#{net}
                    else
                      a(href='/api/getreward') #{address}/api/getreward
              if settings.blockchain_specific.heavycoin.public_apis.getsupply.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getsupply'] != null && settings.blockchain_specific.heavycoin.api_cmds['getsupply'] != ''
                li
                  p
                    div.fw-bold getsupply [net]
                    div
                      em #{settings.locale.api_getsupply}
                    if !isMainnet
                      a(href='/api/getsupply') #{address}/api/getsupply/#{net}
                    else
                      a(href='/api/getsupply') #{address}/api/getsupply
              if settings.blockchain_specific.heavycoin.public_apis.getnextrewardestimate.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getnextrewardestimate'] != null && settings.blockchain_specific.heavycoin.api_cmds['getnextrewardestimate'] != ''
                li
                  p
                    div.fw-bold getnextrewardestimate [net]
                    div
                      em #{settings.locale.api_getnextrewardestimate}
                    if !isMainnet
                      a(href='/api/getnextrewardestimate') #{address}/api/getnextrewardestimate/#{net}
                    else
                      a(href='/api/getnextrewardestimate') #{address}/api/getnextrewardestimate
              if settings.blockchain_specific.heavycoin.public_apis.getnextrewardwhenstr.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getnextrewardwhenstr'] != null && settings.blockchain_specific.heavycoin.api_cmds['getnextrewardwhenstr'] != ''
                li
                  p
                    div.fw-bold getnextrewardwhenstr [net]
                    div
                      em #{settings.locale.api_getnextrewardwhenstr}
                    if !isMainnet
                      a(href='/api/getnextrewardwhenstr') #{address}/api/getnextrewardwhenstr/#{net}
                    else 
                      a(href='/api/getnextrewardwhenstr') #{address}/api/getnextrewardwhenstr
          hr
        if !api_page.public_apis.hide_ext_api_section
          h3 Extended API
          p
            em Return data from local indexes
          ul
            if api_page.public_apis.ext.getmoneysupply.enabled == true
              li
                p
                  div.fw-bold getmoneysupply [net]
                  div
                    em Returns current money supply
                  if !isMainnet
                    a(href='/ext/getmoneysupply/' + net) #{address}/ext/getmoneysupply/#{net}
                  else
                    a(href='/ext/getmoneysupply') #{address}/ext/getmoneysupply
            if api_page.public_apis.ext.getdistribution.enabled == true
              li
                p
                  div.fw-bold getdistribution [net]
                  div
                    em Returns wealth distribution stats
                  if !isMainnet
                    a(href='/ext/getdistribution/' + net) #{address}/ext/getdistribution/#{net}
                  else
                    a(href='/ext/getdistribution') #{address}/ext/getdistribution
            if api_page.public_apis.ext.getaddress.enabled == true
              li
                p
                  div.fw-bold getaddress [net] [hash]
                  div
                    em Returns information for given address
                  if !isMainnet
                    a(href='/ext/getaddress/' + api_page.sample_data.address + '/' + net) #{address}/ext/getaddress/#{api_page.sample_data.address}/#{net}
                  else
                    a(href='/ext/getaddress/' + api_page.sample_data.address) #{address}/ext/getaddress/#{api_page.sample_data.address}
            if api_page.public_apis.ext.getaddresstxs.enabled == true
              li
                p
                  div.fw-bold getaddresstxs [hash] [net] [start] [length]
                  div
                    em Returns last [length] transactions for address [hash], starting from offset [start]
                  if !isMainnet
                    a(href='/ext/getaddresstxs/' + api_page.sample_data.address + '/' + net + '/0/50') #{address}/ext/getaddresstxs/#{api_page.sample_data.address}/#{net}/0/50/
                  else
                    a(href='/ext/getaddresstxs/' + api_page.sample_data.address + '/mainnet/0/50') #{address}/ext/getaddresstxs/#{api_page.sample_data.address}/mainnet/0/50
            if api_page.public_apis.ext.gettx.enabled == true
              li
                p
                  div.fw-bold gettx [hash] [net]
                  div
                    em Returns information for given tx hash
                  if !isMainnet
                    a(href='/ext/gettx/' + api_page.sample_data.txhash + '/' + net) #{address}/ext/gettx/#{api_page.sample_data.txhash}/#{net}
                  else
                    a(href='/ext/gettx/' + api_page.sample_data.txhash) #{address}/ext/gettx/#{api_page.sample_data.txhash}
            if api_page.public_apis.ext.getbalance.enabled == true
              li
                p
                  div.fw-bold getbalance [hash] [net]
                  div
                    em Returns current balance of given address
                  if !isMainnet
                    a(href='/ext/getbalance/' + api_page.sample_data.address + '/' + net) #{address}/ext/getbalance/#{api_page.sample_data.address}/#{net}
                  else
                    a(href='/ext/getbalance/' + api_page.sample_data.address) #{address}/ext/getbalance/#{api_page.sample_data.address}
            if api_page.public_apis.ext.getlasttxs.enabled == true
              li
                p
                  div.fw-bold getlasttxs [net] [min] [length] [start] [tx_type]
                  div
                    em Returns the latest [length] transactions greater than [min] coins, starting from offset [start], optionally only the given transaction type, either by its index (starting with 0) or type.
                    ul 
                      each tx_type, index in tx_types
                            li #{index} - #{tx_type.replace('TRANSACTION_', '')}
                  div
                    em Note: [length] is limited to returning #{api_page.public_apis.ext.getlasttxs.max_items_per_query} records per query
                  div
                    if !isMainnet
                      a(href='/ext/getlasttxs/'+ net + '/100/0/100') #{address}/ext/getlasttxs/#{net}/100/0/100
                    else
                      a(href='/ext/getlasttxs/mainnet/100/0/100') #{address}/ext/getlasttxs/mainnet/100/0/100
            if api_page.public_apis.ext.getcurrentprice.enabled == true
              li
                p
                  div.fw-bold getcurrentprice [net]
                  div
                    em Returns last known exchange prices in
                      ul
                        li US Dollar (USD)
                        li Theter (USDT)
                        li Euro (EUR)
                        li Chinese Yuan (CNY)
                        li Indian Rupees (INR)
                        li Japanese Yen (JPY)
                        li British Pound Sterling (GBP)
                        li Russian Rubel (RUB)
                        li Brazilian Real (BRL)
                        li Bitcoin (BTC)
                  if !isMainnet
                    a(href='/ext/getcurrentprice/' + net) #{address}/ext/getcurrentprice/#{net}
                  else
                    a(href='/ext/getcurrentprice') #{address}/ext/getcurrentprice
            if api_page.public_apis.ext.getnetworkpeers.enabled == true
              li
                p
                  div.fw-bold getnetworkpeers [net]
                  div
                    em Returns the list of network peers that have connected to the but-x node in the last 24 hours
                  if !isMainnet
                    a(href='/ext/getnetworkpeers/' + net) #{address}/ext/getnetworkpeers/#{net}
                  else
                    a(href='/ext/getnetworkpeers') #{address}/ext/getnetworkpeers
            if api_page.public_apis.ext.getbasicstats.enabled == true
              li
                p
                  div.fw-bold getbasicstats [net]
                  div
                    em="Returns basic statistics about the coin including: block count, circulating supply, USD price, " + markets_page.default_exchange.trading_pair.split('/')[1].toUpperCase() + " price" + (api_page.public_apis.rpc.getmasternodecount.enabled == true && api_cmds['getmasternodecount'] != null && api_cmds['getmasternodecount'] != '' ? ', ' + '# of masternodes' : '')
                  if !isMainnet
                    a(href='/ext/getbasicstats/' + net) #{address}/ext/getbasicstats/#{net}
                  else
                    a(href='/ext/getbasicstats') #{address}/ext/getbasicstats
            if api_page.public_apis.ext.getticker.enabled == true
              li
                p
                  div.fw-bold getticker [mode] [net] Use 'all' for mode.
                  div
                    em="Returns the ticker about the coin, optional about a certain category, including: block count, circulating supply, USD price, ..." 
                  if !isMainnet
                    a(href='/ext/getticker/all/' + net) #{address}/ext/getticker/all/#{net}
                  else
                    a(href='/ext/getticker/all') #{address}/ext/getticker/all
            if api_page.public_apis.ext.getmarkets.enabled == true
              li
                p
                  div.fw-bold getmarkets [mode] [net] Use 'summary' or 'full' for mode.
                  div
                    em="Returns the list of markets with summary and optional buys, sells, and chart data if mode is 'full'." 
                  div
                    if !isMainnet
                      a(href='/ext/getmarkets/summary/' + net) #{address}/ext/getmarkets/summary/#{net}
                    else
                      a(href='/ext/getmarkets/summary') #{address}/ext/getmarkets/summary
                  div
                    if !isMainnet
                      a(href='/ext/getmarkets/full/' + net) #{address}/ext/getmarkets/full/#{net}
                    else
                      a(href='/ext/getmarkets/full') #{address}/ext/getmarkets/full
            if api_page.public_apis.ext.getsummary.enabled == true
              li
                p
                  div.fw-bold getsummary [net]
                  div
                    em="Returns a summary of coin data including: difficulty, hybrid difficulty, circulating supply, hash rate, " + markets_page.default_exchange.trading_pair.split('/')[1].toUpperCase() + " price, network connection count, block count" + (api_page.public_apis.rpc.getmasternodecount.enabled == true && api_cmds['getmasternodecount'] != null && api_cmds['getmasternodecount'] != '' ? ', ' + 'count of online masternodes' + ', ' + 'count of offline masternodes' : '')
                  if !isMainnet
                    a(href='/ext/getsummary/' + net) #{address}/ext/getsummary/#{net}
                  else
                    a(href='/ext/getsummary') #{address}/ext/getsummary
            if api_page.public_apis.ext.getmasternodelist.enabled == true && api_cmds['getmasternodelist'] != null && api_cmds['getmasternodelist'] != ''
              li
                p
                  div.fw-bold getmasternodelist [net]
                  div
                    em #{settings.locale.api_getmasternodelist}
                  if !isMainnet
                    a(href='/ext/getmasternodelist/' + net) #{address}/ext/getmasternodelist/#{net}
                  else
                    a(href='/ext/getmasternodelist') #{address}/ext/getmasternodelist
            if api_page.public_apis.ext.getmasternoderewards.enabled == true
              li
                p
                  div.fw-bold getmasternoderewards [net] [hash] [since] (/ext/getmasternoderewards/hash/since)
                  div
                    em Returns a list of masternode reward transactions for address [hash] that arrived after block height [since]
                  if !isMainnet
                    a(href='/ext/getmasternoderewards/' + api_page.sample_data.address + '/' + api_page.sample_data.blockindex + '/' + net) #{address}/ext/getmasternoderewards/#{api_page.sample_data.address}/#{api_page.sample_data.blockindex}/#{net}
                  else
                    a(href='/ext/getmasternoderewards/' + api_page.sample_data.address + '/' + api_page.sample_data.blockindex) #{address}/ext/getmasternoderewards/#{api_page.sample_data.address}/#{api_page.sample_data.blockindex}
            if api_page.public_apis.ext.getmasternoderewardstotal.enabled == true
              li
                p
                  div.fw-bold getmasternoderewardstotal [net] [hash] [since]
                  div
                    em Returns the total number of coins earned in masternode rewards for address [hash] that arrived after block height [since]
                  if !isMainnet
                    a(href='/ext/getmasternoderewardstotal/' + api_page.sample_data.address + '/' + api_page.sample_data.blockindex + '/' + net) #{address}/ext/getmasternoderewardstotal/#{api_page.sample_data.address}/#{api_page.sample_data.blockindex}/#{net}
                  else
                    a(href='/ext/getmasternoderewardstotal/' + api_page.sample_data.address + '/' + api_page.sample_data.blockindex) #{address}/ext/getmasternoderewardstotal/#{api_page.sample_data.address}/#{api_page.sample_data.blockindex}
          hr
        if !api_page.public_apis.hide_asset_api_section
          h3 Asset API
          if api_page.public_apis.db.asset.enabled == true
            li
              p
                div.fw-bold asset [name] [net]
                div
                  em Returns all data about an asset.
                if !isMainnet
                  a(href='/api/asset/' + api_page.sample_data.asset + '/' + net) #{address}/api/asset/#{api_page.sample_data.asset}/#{net}
                else
                  a(href='/api/asset/' + api_page.sample_data.asset) #{address}/api/asset/#{api_page.sample_data.asset}
          if api_page.public_apis.db.assets.enabled == true
            li
              p
                div.fw-bold assets [net] [start] [length]
                div
                  em Returns a list of all assets on the blockchain.
                a(href='/api/assets/' + net + '/0/10') #{address}/api/assets/#{net}/0/10
                //- if !isMainnet
                //-   a(href='/api/assets/' + net + '/0/10') #{address}/api/assets/#{net}/0/10
                //- else
                //-   a(href='/api/assets') #{address}/api/assets
          if api_page.public_apis.db.getassettxes.enabled == true
            li
              p
                div.fw-bold getassettxes [name] [net] [start] [length]
                div
                  em Returns a list of all transactions for an asset on the blockchain.
                a(href='/api/getassettxes/' + api_page.sample_data.asset + '/' + net + '/0/10') #{address}/api/getassettxes/#{api_page.sample_data.asset}/#{net}/0/10
                //- if !isMainnet
                //-   a(href='/api/assets/' + net) #{address}/api/assets/#{net}
                //- else
                //-   a(href='/api/assets') #{address}/api/assets
          hr
        if !api_page.public_apis.hide_net_api_section
          h3 Net API
          p
            em Data accross all chains.
          ul
            if api_page.public_apis.net.getallnet.enabled == true
              li
                p
                  div.fw-bold getallnet [mode]
                  div
                    em Returns a list and data about all nets available.
                  a(href='/net/getallnet') #{address}/net/getallnet
          hr
        if !api_page.public_apis.hide_peers_api_section
          h3 Peers API (restricted)
          p
            em X P2P layer.
          ul
            if api_page.public_apis.peers.getpeers.enabled == true
              li
                p
                  div.fw-bold getpeers
                  div
                    em Returns a list of all upstream and downstream peers connected to this but-x instance.
                  a(href='/peers/getpeers') #{address}/peers/getpeers
          ul
            if api_page.public_apis.peers.subscribe_upstream.enabled == true
              li
                p
                  div.fw-bold subscribe/upstream
                  div
                    em Subscribe to an X peer as an upstream peer.
                  a(href='/peers/subscribe/upstream') #{address}/peers/subscribe/upstream
          ul
            if api_page.public_apis.peers.subscribe_downstream.enabled == true
              li
                p
                  div.fw-bold subscribe/downstream
                  div
                    em Subscribe to an X peer as a downstream peer.
                  a(href='/peers/subscribe/downstream') #{address}/peers/subscribe/downstream
          ul
            if api_page.public_apis.peers.unsubscribe_upstream.enabled == true
              li
                p
                  div.fw-bold unsubscribe/upstream
                  div
                    em Unsubscribe to an X peer as an upstream peer.
                  a(href='/peers/unsubscribe/upstream') #{address}/peers/unsubscribe/upstream
          ul
            if api_page.public_apis.peers.unsubscribe_downstream.enabled == true
              li
                p
                  div.fw-bold unsubscribe/downstream
                  div
                    em Unsubscribe to an X peer as a downstream peer.
                  a(href='/peers/unsubscribe/downstream') #{address}/peers/unsubscribe/downstream
          hr
        if !api_page.public_apis.hide_linking_section
          h3 Linking (GET)
          p
            em Linking to X
          ul
            li
              p
                div.fw-bold transaction (/tx/txid)
                if !isMainnet
                  a(href='/tx/' + api_page.sample_data.txhash + '/' + net) #{address}/tx/#{api_page.sample_data.txhash}/#{net}
                else
                  a(href='/tx/' + api_page.sample_data.txhash) #{address}/tx/#{api_page.sample_data.txhash}
            li
              p
                div.fw-bold block (/block/hash)
                if !isMainnet
                  a(href='/block/' + api_page.sample_data.blockhash + '/' + net) #{address}/block/#{api_page.sample_data.blockhash}/#{net}
                else
                  a(href='/block/' + api_page.sample_data.blockhash) #{address}/block/#{api_page.sample_data.blockhash}
            li
              p
                div.fw-bold address (/address/hash)
                if !isMainnet
                  a(href='/address/' + api_page.sample_data.address + '/' + net) #{address}/address/#{api_page.sample_data.address}/#{net}
                else
                  a(href='/address/' + api_page.sample_data.address) #{address}/address/#{api_page.sample_data.address}
            li
              p
                div.fw-bold qrcode (/qr/hash)
                if !isMainnet
                  a(href='/qr/' + api_page.sample_data.address + '/' + net) #{address}/qr/#{api_page.sample_data.address}/#{net}
                else
                  a(href='/qr/' + api_page.sample_data.address) #{address}/qr/#{api_page.sample_data.address}
            hr
        if !api_page.public_apis.hide_electrum_api_section
          h3 ElectrumX API (JSON-RPC 2.0)
          p ElectrumX servers for light wallets (former Bitcoin Lightning) are available at 
            ul 
              li 88.99.186.230
              li 95.216.204.251
              li 116.203.130.246
              li 135.181.36.174
          p ports
            ul
              li 50001 TCP
              li 50002 TLS
              li 50003 Websocket
              li 50004 TLS Websocket
          p &nbsp;
          ul
            li
              p
                div.fw-bold version
                div
                  em Returns the server version (all clients must request this resource first, but only once per session).
                  p 
                    b {"id": "clientID", "method": "server.version", "params": []}
                  code -> {"jsonrpc":"2.0","result":["ElectrumX 1.16.0","1.4"],"id":"clientID"}
            li
              p
                div.fw-bold ping
                div
                  em Pings the server.
                  p 
                    b {"id": "clientID", "method": "server.ping", "params": []}
                  code -> {"jsonrpc":"2.0","result":null,"id":"clientID"}
            li
              p
                div.fw-bold banner
                div
                  em Returns the server banner.
                  p 
                    b {"id": "clientID", "method": "server.banner", "params": []}
                  code -> {"jsonrpc":"2.0","result":"You are connected to an ElectrumX 1.16.0 server.","id":"clientID"}
            li
              p
                div.fw-bold donation address
                div
                  em Returns the servers donation address.
                  p 
                    b {"id": "clientID", "method": "server.donation_address", "params": []}
                  code -> {"jsonrpc":"2.0","result":" XvrHWjw7zd4CQZkxbiZGt3dGE53vjrUGrs","id":"clientID"}
            li
              p
                div.fw-bold features
                div
                  em Returns the servers service list.
                  p 
                    b {"id": "clientID", "method": "server.features", "params": []}
                  code -> {"jsonrpc":"2.0","result":{"hosts":{"88.99.186.230":{"tcp_port":50001,"ssl_port":50002,"ws_port":50003,"wss_port":50004}},"pruning":null,"server_version":"ElectrumX 1.16.0","protocol_min":"1.4","protocol_max":"1.4.2","genesis_hash":"001787e5f9c3cd249f84f0142071f6098d9e3b7ec8591ff73543ddc4900c1dc2","hash_function":"sha256","services":["tcp://88.99.186.230:50001","ssl://88.99.186.230:50002","ws://88.99.186.230:50003","wss://88.99.186.230:50004"]},"id":"clientID"}
            li
              p
                div.fw-bold estimate transaction fee
                div
                  em Returns the estimated transaction fee for the given number of confirmations.
                  p 
                    b {"id": "clientID", "method": "blockchain.estimatefee", "params": ["5"]}
                  code -> {"jsonrpc":"2.0","result":1.047e-05,"id":"clientID"}
            li
              p
                div.fw-bold relay fee
                div
                  em Returns the minimum fee a low-priority transaction has to pay.
                  p 
                    b {"id": "clientID", "method": "blockchain.relayfee", "params": []}
                  code -> {"jsonrpc":"2.0","result":1e-05,"id":"clientID"}
            li
              p
                div.fw-bold subscribe peer discovery
                div
                  em Returns the list of But ElectrumX network peers and subscribes to changes of this list.
                  p 
                    b {"id": "clientID", "method": "server.peers.subscribe", "params": []}
                  code -> {"jsonrpc":"2.0","result":[["135.181.36.174","135.181.36.174",["v1.4.2","s50002","t50001"]],["116.203.130.246","116.203.130.246",["v1.4.2","s50002","t50001"]],["88.99.186.230","88.99.186.230",["v1.4.2","s50002","t50001"]]],"id":"clientID"}
            li
              p
                div.fw-bold get block header
                div
                  em Returns the list of block header for the given height.
                  p 
                    b {"id": "clientID", "method": "blockchain.block.header", "params": ["10"]}
                  code -> {"jsonrpc":"2.0","result":"00080020...92010000","id":"clientID"}
            li
              p
                div.fw-bold get block headers
                div
                  em Returns a given number of block headers from the height given as one string. Max number is 2016.
                  p 
                    b {"id": "clientID", "method": "blockchain.block.headers", "params": ["437123", "100"]}
                  code -> {"jsonrpc":"2.0","result":{"hex":"00280020...c1ea84fa","count":11,"max":2016},"id":"clientID"}
            li
              p
                div.fw-bold address balance
                div
                  em Returns the balance for the given script hash in EGOD .
                  p 
                    b {"id": "clientID", "method": "blockchain.scripthash.get_balance", "params": ["b8b56d50373d2c9b57d623e5379dd7a10708a563372a18b6d7ddedf4f2400855"]}
                  code -> {"jsonrpc":"2.0","result":{"confirmed":11321996296013,"unconfirmed":0},"id":"clientID"}
            li
              p
                div.fw-bold list unspent
                div
                  em Returns unspent transaction outputs for the given script hash in EGOD.
                  p 
                    b {"id": "clientID", "method": "blockchain.scripthash.listunspent", "params": ["b8b56d50373d2c9b57d623e5379dd7a10708a563372a18b6d7ddedf4f2400855"]}
                  code -> {"jsonrpc":"2.0","result":[{"tx_hash":"d554ac7a95b0f363fa6fd691acec43afb2ccd7cb4c7d4383d97ca62e26413af5","tx_pos":1,"height":80666,"value":8796296296300},{"tx_hash":"2599c9ac54b86cf9d5e9fd0dac21d9ebd39ab73510f3b3a10a894c35f1b3f0e8","tx_pos":1,"height":83930,"value":2435800000000},{"tx_hash":"d73530da14f5075f9976d9a17f1722bb2a42bd0d9893995b4e6f76001837ecb2","tx_pos":0,"height":331057,"value":87899999713},{"tx_hash":"87bc2c0ceae472f8865055713f64ff49fcd93fd739d52ced85f9df2b2cb8ba50","tx_pos":0,"height":414048,"value":2000000000}],"id":"clientID"}
            li
              p
                div.fw-bold mempool transactions
                div
                  em Returns the transactions in the mempool for the given script hash.
                  p 
                    b {"id": "clientID", "method": "blockchain.scripthash.get_mempool", "params": ["8b01df4e368ea28f8dc0423bcf7a4923e3a12d307c875e47a0cfbf90b5c39161"]}
                  code -> {"jsonrpc":"2.0","result":[],"id":"clientID"}
            li
              p
                div.fw-bold subscribe to script hash
                div
                  em Subcribes to the given script hash and the changes of the address balance and transactions.
                  p 
                    b {"id": "clientID", "method": "blockchain.scripthash.subscribe", "params": ["8b01df4e368ea28f8dc0423bcf7a4923e3a12d307c875e47a0cfbf90b5c39161"]}
                  code -> {"jsonrpc":"2.0","result":null,"id":"clientID"}

extends layout

block content
  include ./includes/common.pug

  if richlist_page.wealth_distribution.show_distribution_chart == true
    script.
      $(document).ready(function() {
        var data = [
          ['Top 1-25', !{dista.percent}],
          ['Top 26-50', !{distb.percent}],
          ['Top 51-75', !{distc.percent}],
          ['Top 76-100', !{distd.percent}],
          ['101+', !{diste.percent}]
        ];
        var burned = '!{burned}';
        if ('#{richlist_page.burned_coins.include_burned_coins_in_dist}' == 'true' && burned != 'null' && burned != '' && burned != '0')
          data.push(['Burned Coins', parseFloat(((burned / 100000000) / !{stats.supply}) * 100)]);
        var piePlot = $.jqplot('pieChart', [data],
          {
            seriesColors: !{JSON.stringify(richlist_page.wealth_distribution.colors)},
            series: [{
              renderer: $.jqplot.PieRenderer,
              rendererOptions: {
                diameter: 260,
                padding: 0,
                sliceMargin: 4,
                showDataLabels: false
              }
            }],
            grid: {
              borderWidth:0, shadow:false,
              backgroundColor: 'transparent'
            },
            legend: {
              show: false,
              rendererOptions: {
                numberRows: 1,
                border: 'none'
              },
              location: 's'
            }
          }
        );

        if ('#{richlist_page.page_header.show_last_updated}' == 'true') {
          var lastUpdatedDate = #{(last_updated == null || last_updated == '0' ? 0 : last_updated)};

          if (lastUpdatedDate != 0) {
            $('span#lastUpdatedDate').html(' ' + format_unixtime(lastUpdatedDate));

            if (#{shared_pages.date_time.enable_alt_timezone_tooltips} == true) {
              $('span#lastUpdatedDate').attr('data-bs-toggle', 'tooltip').attr('data-bs-placement', 'auto').attr('title', format_unixtime(lastUpdatedDate, true));
              enableTooltips();
            }
          } else
            $('span#lastUpdatedDate').html(' N/A');
        }
        $(window).resize(function () {
          if (piePlot != null && $('#pieChart').is(':visible')) {
            let parentWidth = $('#pieChart').parent().outerWidth();

            $('#pieChart').css('height', (parentWidth <= 300 ? parentWidth + 5 : 305).toString() + 'px');
            $('#pieChart').css('width', (parentWidth <= 300 ? parentWidth : 300).toString() + 'px');
            piePlot.replot({ resetAxes: false });
          }
        });
      });
  if settings.anyHeader(richlist_page, net)
    .row(style='margin: 0 0 5px 0;')
      div(class=(richlist_page.wealth_distribution.show_distribution_table == true || richlist_page.wealth_distribution.show_distribution_chart == true ? 'col-xs-12' : 'col-12'))
        .container
          #page-header-container(style='align-items:' + (settings.allHeaders(richlist_page, net) ? 'flex-start' : 'center'))
            if richlist_page.page_header.show_img == true
              #header-img-container
                img#header-img(src=page_title_logo)
            #page-title-container
              if richlist_page.page_header.show_title == true
                h3#page-title #{settings.locale.rl_title.replace('{1}', coin.name)}
              if richlist_page.page_header.show_last_updated == true
                if richlist_page.page_header.show_title != true && richlist_page.page_header.show_description != true
                  #page-title-container
                    .sub-page-header
                      span=settings.locale.last_updated + ':'
                      span.text-muted#lastUpdatedDate
                else
                  .sub-page-header(style='margin-bottom:' + (richlist_page.page_header.show_description == true ? '5' : '0') + 'px')
                    span=settings.locale.last_updated + ':'
                    span.text-muted#lastUpdatedDate
              if richlist_page.page_header.show_description == true
                if richlist_page.page_header.show_title != true && richlist_page.page_header.show_last_updated != true
                  #page-title-container
                    .sub-page-header.text-muted=settings.locale.rl_description.replace('{1}', coin.name)
                else
                  .sub-page-header.text-muted=settings.locale.rl_description.replace('{1}', coin.name)
          .cardSpacer.clearfix
  .row(style='margin-left:0;margin-right:0;')
    if richlist_page.show_current_balance == true || richlist_page.show_received_coins == true
      div(style='padding: 0', class=(richlist_page.wealth_distribution.show_distribution_table == true || richlist_page.wealth_distribution.show_distribution_chart == true ? 'col-xs-12 col-lg-8' : 'col-12'))
        .container
          ul.nav.nav-tabs(role='tablist')
            if richlist_page.show_current_balance == true
              li.nav-item(role='presentation')
                a(class='nav-link' + (richlist_page.show_current_balance == true ? ' active' : ''), href='#balance', aria-controls='balance', role='tab', data-bs-toggle='tab') #{settings.locale.rl_current_balance}
            if richlist_page.show_received_coins == true
              li.nav-item(role='presentation')
                a(class='nav-link' + (!richlist_page.show_current_balance ? ' active' : ''), href='#received', aria-controls='received', role='tab', data-bs-toggle='tab') #{settings.locale.rl_received_coins}
            if richlist_page.show_top_tx == true
              li.nav-item(role='presentation')
                a(class='nav-link' + (!richlist_page.show_top_tx ? ' active' : ''), href='#toptx', aria-controls='toptx', role='tab', data-bs-toggle='tab') #{settings.locale.rl_top_tx}
        .tab-content
          if richlist_page.show_current_balance == true
            #balance(class='container tab-pane' + (richlist_page.show_current_balance == true ? ' active' : ''), style='margin-top:0;')
              .card.card-default.border-0
                table.table.table-bordered.summary-table.right-border-0(id="rich" style='margin-bottom:0;', cellspacing='0')
                  thead
                    tr
                      th.text-center
                        span.position
                      th.text-center #{settings.locale.tx_address}
                      th.text-center #{settings.locale.rl_balance}
                        span.small.fw-normal  (#{coin.symbol})
                      th.text-center %
                  tbody
                    - var count = 0;
                    each address in balance
                      - count = count + 1;
                      - var itemFixed = (parseInt(address.balance) / 100000000);
                      - var itemFixedParts = Number(itemFixed).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true}).split(".");
                      - var percent = Number((itemFixed / stats.supply) * 100).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':false});
                      - var percentParts = percent.split(".");
                      tr
                        td.text-center
                          =count
                        td.addresscol
                          if claim_address_page.enabled == false || address.name == null || address.name == ''
                            a.breakWord(href='/address/' + address.a_id + '/' + net) #{address.a_id}
                          else
                            a.breakWord(href='/address/' + address.a_id + '/' + net) #{address.name}
                          include ./includes/rl_labels.pug
                        td.text-end #{itemFixedParts[0]}.
                          span.decimal #{itemFixedParts[1]}
                        td.text-end #{percentParts[0]}.
                          span.decimal #{percentParts[1]}
          if richlist_page.show_received_coins == true
            #received(class='container tab-pane' + (!richlist_page.show_current_balance ? ' active' : ''), style='margin-top:0;')
              .card.card-default.border-0
                table#rreceive.table.table-bordered.summary-table.right-border-0(style='margin-bottom:0;', cellspacing='0')
                  thead
                    tr
                      th.text-center
                        span.position
                      th.text-center #{settings.locale.tx_address}
                      th.text-center #{settings.locale.rl_received}
                  tbody
                    - var count = 0;
                    each address in received
                      - count = count + 1;
                      - var itemFixed = Number(parseInt(address.received) / 100000000).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
                      - var itemFixedParts = itemFixed.split(".");
                      tr
                        td.text-center
                          =count
                        td.addresscol
                          if claim_address_page.enabled == false || address.name == null || address.name == ''
                            a.breakWord(href='/address/' + address.a_id + '/' + net) #{address.a_id}
                          else
                            a.breakWord(href='/address/' + address.a_id + '/' + net) #{address.name}
                          include ./includes/rl_labels.pug
                        td.text-end #{itemFixedParts[0]}.
                          span.decimal #{itemFixedParts[1]}
          if richlist_page.show_top_tx == true
            #toptx(class='container tab-pane' + (!richlist_page.show_top_tx ? ' active' : ''), style='margin-top:0;')
              .card.card-default.border-0
                table#rtoptx.table.table-bordered.summary-table.right-border-0(style='margin-bottom:0;', cellspacing='0')
                  thead
                    tr
                      th.text-center
                        span.position
                      th.text-center #{settings.locale.rl_block_height}
                      th.text-center #{settings.locale.rl_tx_timestamp}
                      th.text-center #{settings.locale.rl_tx_size}
                      th.text-center #{settings.locale.rl_total_out}
                        span.small.fw-normal  (#{coin.symbol})
                  tbody
                    - var count = 0;
                    each tx in toptx
                      - count = count + 1;
                      - var itemFixed = Number(parseInt(tx.total) / 100000000).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
                      - var itemFixedParts = itemFixed.split(".");
                      - var timestamp = new Date(tx.timestamp * 1000).toLocaleDateString();
                      tr
                        td.text-center
                          =count
                        td.text-center
                          a.breakWord(href='/block/' + tx.blockhash + '/' + net) #{settings.formatDecimal(tx.blockindex, 0, 0)}
                        td.text-center
                          span #{timestamp}
                        td.text-end
                          span #{settings.formatDecimal(tx.size, 0, 0)}
                        td.text-end #{itemFixedParts[0]}.
                          span.decimal #{itemFixedParts[1]}
    if richlist_page.wealth_distribution.show_distribution_table == true || richlist_page.wealth_distribution.show_distribution_chart == true
      div(class=(richlist_page.show_received_coins == true || richlist_page.show_current_balance == true ? 'col-xs-12 col-lg-4' : 'col-12'))
        if richlist_page.wealth_distribution.show_distribution_table == true
          #summary-panel.card.card-default.border-0(style='margin-top:' + (richlist_page.show_current_balance == true || richlist_page.show_received_coins == true ? '34' : '0') + 'px;')
            .card-header
              strong #{settings.locale.rl_wealth}
            table.table.table-bordered.summary-table.right-border-0(style='margin-bottom:0;')
              thead
                tr
                  th
                  th.text-center Amount
                    span.small.fw-normal  (#{coin.symbol})
                  th.text-center %
              tbody
                tr
                  td.fw-bold
                    div.float-start.wealth-dist-color-box(style=('background-color:' + richlist_page.wealth_distribution.colors[0] + ';'))
                    span #{settings.locale.rl_top25}
                  - var total = Number(dista.total).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
                  - var totalParts = total.split(".");
                  - var percent = parseFloat(dista.percent).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':false});
                  - var percentParts = percent.split(".");
                  td.text-end.breakWord #{totalParts[0]}.
                    span.decimal.breakWord #{totalParts[1]}
                  td.text-end #{percentParts[0]}.
                    span.decimal #{percentParts[1]}
                tr
                  td.fw-bold
                    div.float-start.wealth-dist-color-box(style=('background-color:' + richlist_page.wealth_distribution.colors[1] + ';'))
                    span #{settings.locale.rl_top50}
                  - var total = Number(distb.total).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
                  - var totalParts = total.split(".");
                  - var percent = parseFloat(distb.percent).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':false});
                  - var percentParts = percent.split(".");
                  td.text-end.breakWord #{totalParts[0]}.
                    span.decimal.breakWord #{totalParts[1]}
                  td.text-end #{percentParts[0]}.
                    span.decimal #{percentParts[1]}
                tr
                  td.fw-bold
                    div.float-start.wealth-dist-color-box(style=('background-color:' + richlist_page.wealth_distribution.colors[2] + ';'))
                    span #{settings.locale.rl_top75}
                  - var total = Number(distc.total).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
                  - var totalParts = total.split(".");
                  - var percent = parseFloat(distc.percent).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':false});
                  - var percentParts = percent.split(".");
                  td.text-end.breakWord #{totalParts[0]}.
                    span.decimal.breakWord #{totalParts[1]}
                  td.text-end #{percentParts[0]}.
                    span.decimal #{percentParts[1]}
                tr
                  td.fw-bold
                    div.float-start.wealth-dist-color-box(style=('background-color:' + richlist_page.wealth_distribution.colors[3] + ';'))
                    span #{settings.locale.rl_top100}
                  - var total = Number(distd.total).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
                  - var totalParts = total.split(".");
                  - var percent = parseFloat(distd.percent).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':false});
                  - var percentParts = percent.split(".");
                  td.text-end.breakWord #{totalParts[0]}.
                    span.decimal.breakWord #{totalParts[1]}
                  td.text-end #{percentParts[0]}.
                    span.decimal #{percentParts[1]}
                tr.text-end
                  td.fw-bold
                    span #{settings.locale.total_top_100}
                  - var total = Number(parseFloat(dista.total) + parseFloat(distb.total) + parseFloat(distc.total) + parseFloat(distd.total)).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
                  - var totalParts = total.split(".");
                  - var percent = (parseFloat(dista.percent)+parseFloat(distb.percent)+parseFloat(distc.percent)+parseFloat(distd.percent)).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':false});
                  - var percentParts = percent.split(".");
                  td.text-end.fw-bold.breakWord #{totalParts[0]}.
                    span.decimal.breakWord #{totalParts[1]}
                  td.fw-bold.text-end #{percentParts[0]}.
                    span.decimal #{percentParts[1]}
                tr
                  td.fw-bold
                    div.float-start.wealth-dist-color-box(style=('background-color:' + richlist_page.wealth_distribution.colors[4] + ';'))
                    span 101+
                  - var total = Number(diste.total).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
                  - var totalParts = total.split(".");
                  - var percent = parseFloat(diste.percent).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':false});
                  - var percentParts = percent.split(".");
                  td.text-end.breakWord #{totalParts[0]}.
                    span.decimal.breakWord #{totalParts[1]}
                  td.text-end #{percentParts[0]}.
                    span.decimal #{percentParts[1]}
                if richlist_page.burned_coins.include_burned_coins_in_dist == true && burned != null && burned > 0
                  tr
                    td.fw-bold
                      div.float-start.wealth-dist-color-box(style=('background-color:' + richlist_page.wealth_distribution.colors[5] + ';'))
                      span Burned Coins
                    - var total = Number(burned / 100000000).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
                    - var totalParts = total.split(".");
                    - var percent = parseFloat(((burned / 100000000) / stats.supply) * 100).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':false});
                    - var percentParts = percent.split(".");
                    td.text-end.breakWord #{totalParts[0]}.
                      span.decimal.breakWord #{totalParts[1]}
                    td.text-end #{percentParts[0]}.
                      span.decimal #{percentParts[1]}
                tr.text-end
                  td.fw-bold
                    span #{settings.locale.total}
                  - var total = Number(parseFloat(dista.total) + parseFloat(distb.total) + parseFloat(distc.total) + parseFloat(distd.total) + parseFloat(diste.total) + (richlist_page.burned_coins.include_burned_coins_in_dist == true && burned != null && burned > 0 ? burned / 100000000 : 0)).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
                  - var totalParts = total.split(".");
                  - var percent = (parseFloat(dista.percent) + parseFloat(distb.percent) + parseFloat(distc.percent) + parseFloat(distd.percent) + parseFloat(diste.percent) + parseFloat((richlist_page.burned_coins.include_burned_coins_in_dist == true && burned != null && burned > 0 ? ((burned / 100000000) / stats.supply) * 100 : 0))).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':false});
                  - var percentParts = percent.split(".");
                  td.text-end.fw-bold.breakWord #{totalParts[0]}.
                    span.decimal.breakWord #{totalParts[1]}
                  td.fw-bold.text-end #{percentParts[0]}.
                    span.decimal #{percentParts[1]}
        if richlist_page.wealth_distribution.show_distribution_chart == true
          div#pieChart(style="max-width:300px;max-height:305px;margin:0 auto;")
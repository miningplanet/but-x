extends layout

block content
  include ./includes/common.pug
  script.
    $(document).ready(function() {
      if ('#{markets_page.page_header.show_last_updated}' == 'true') {
        var lastUpdatedDate = #{(last_updated == null || last_updated == '0' ? 0 : last_updated)};

        if (lastUpdatedDate != 0) {
          $('span#lastUpdatedDate').html(' ' + format_unixtime(lastUpdatedDate));

          if (#{shared_pages.date_time.enable_alt_timezone_tooltips} == true) {
            $('span#lastUpdatedDate').attr('data-bs-toggle', 'tooltip').attr('data-bs-placement', 'auto').attr('title', format_unixtime(lastUpdatedDate, true));
            enableTooltips();
          }
        } else
          $('span#lastUpdatedDate').html(' N/A');
      }
    });
  if marketdata.data != null && ((marketdata.data.buys != null && marketdata.data.buys.length > 0) || (marketdata.data.sells != null && marketdata.data.sells.length > 0) || (marketdata.data.history != null && marketdata.data.history.length > 0))
    script.
      $(document).ready(function() {
        $('.markets-table').dataTable({
          info: false,
          paging: false,
          searching: false,
          ordering: true,
          autowidth: true,
          responsive: true,
          scrollX: true,
          fnDrawCallback: function(settings) {
          }
        });
        $('.summary-table').dataTable({
          info: false,
          paging: false,
          searching: false,
          ordering: false,
          autowidth: true,
          responsive: true,
          scrollX: true,
          fnDrawCallback: function(settings) {
          }
        });
        $('.order-table').dataTable({
          info: false,
          paging: false,
          searching: false,
          ordering: false,
          scrollY: '250px',
          scrollCollapse: true,
          autowidth: true,
          responsive: true,
          scrollX: true,
          fnDrawCallback: function(settings) {
          }
        });
        $('#history-table').dataTable({
          paging: true,
          searching: false,
          ordering: false,
          responsive: true,
          scrollX: true,
          language: {
            paginate: {
              previous: '<',
              next: '>'
            }
          },
          fnDrawCallback: function(settings) {
            if ($('#history-table > tbody > tr > td > small > span.timestampCol').length > 0) {
              $('#history-table > tbody > tr > td > small > span.timestampCol').each(function() {
                if ($.isNumeric($(this).text())) {
                  if (#{shared_pages.date_time.enable_alt_timezone_tooltips} == true)
                    $(this).attr('data-bs-toggle', 'tooltip').attr('data-bs-placement', 'auto').attr('title', format_unixtime(parseInt($(this).text()), true));

                  $(this).html(format_unixtime(parseInt($(this).text())));
                }
              });

              if (#{shared_pages.date_time.enable_alt_timezone_tooltips} == true)
                enableTooltips();
            }
          }
        });
      });
  .col-xs-12.col-md-12
    if settings.anyHeader(markets_page, net) || (markets_page.page_header.show_exchange_url == true && marketdata.url != null && marketdata.url != '')
      #page-header-container(style='align-items:' + (settings.allHeaders(address_page, net) && ((markets_page.page_header.show_last_updated == true == true) || ((markets_page.page_header.show_exchange_url == true && marketdata.url != null && marketdata.url != '') && markets_page.page_header.show_description == true) || ((markets_page.page_header.show_exchange_url == true && marketdata.url != null && marketdata.url != ''))) ? 'flex-start' : 'center'))
        if markets_page.page_header.show_img == true
          #header-img-container
            img#header-img(src=page_title_logo)
        #page-title-container
          if markets_page.page_header.show_title == true
            h3#page-title !{settings.locale.mkt_title.replace('{1}', marketdata.market_name + ' <span class="small fw-normal">(' + (marketdata.reverse ? marketdata.exchange : marketdata.coin) + '/' + (marketdata.reverse ? marketdata.coin : marketdata.exchange) + ')</span>')}
          if markets_page.page_header.show_last_updated == true
            if markets_page.page_header.show_title != true && markets_page.page_header.show_description != true && (markets_page.page_header.show_exchange_url != true && marketdata.url != null && marketdata.url != '')
              #page-title-container
                .sub-page-header
                  span=settings.locale.last_updated + ':'
                  span.text-muted#lastUpdatedDate
            else
              .sub-page-header(style='margin-bottom:' + (markets_page.page_header.show_description == true || (markets_page.page_header.show_exchange_url == true && marketdata.url != null && marketdata.url != '') ? '5' : '0') + 'px')
                span=settings.locale.last_updated + ':'
                span.text-muted#lastUpdatedDate
          if markets_page.page_header.show_exchange_url == true && marketdata.url != null && marketdata.url != ''
            if markets_page.page_header.show_title != true && markets_page.page_header.show_last_updated != true && markets_page.page_header.show_description != true
              #page-title-container
                .sub-page-header
                  span.fw-bold='Link to Exchange:'
                  a.sub-page-header(title='Link to Exchange', target='_blank', href=marketdata.url)
                    span !{' Trade <span class="small fw-normal">(' + (marketdata.reverse ? marketdata.exchange : marketdata.coin) + '/' + marketdata.exchange + ')</span>'}              
            else
              .sub-page-header(style='margin-bottom:' + (markets_page.page_header.show_description == true ? '5' : '0') + 'px')
                span.fw-bold='Link to Exchange:'
                a.sub-page-header(title='Link to Exchange', target='_blank', href=marketdata.url)
                  span !{' Trade <span class="small fw-normal">(' + (marketdata.reverse ? marketdata.exchange : marketdata.coin) + '/' + (marketdata.reverse ? marketdata.coin : marketdata.exchange) + ')</span>'}
          if markets_page.page_header.show_description == true
            if markets_page.page_header.show_title != true && markets_page.page_header.show_last_updated != true && (markets_page.page_header.show_exchange_url != true && marketdata.url != null && marketdata.url != '')
              #page-title-container
                .sub-page-header.text-muted=settings.locale.mkt_description.replace('{1}', (marketdata.reverse ? marketdata.exchange : marketdata.coin) + '/' + (marketdata.reverse ? marketdata.coin : marketdata.exchange)).replace('{2}', marketdata.market_name)
            else
              .sub-page-header.text-muted=settings.locale.mkt_description.replace('{1}', (marketdata.reverse ? marketdata.exchange : marketdata.coin) + '/' + (marketdata.reverse ? marketdata.coin : marketdata.exchange)).replace('{2}', marketdata.market_name)
      .cardSpacer.clearfix
    if markets_page.show_market_select == true && settings.market_count[net] > 1
      .row
        .col-md-12.cardSpacer
          .card.card-default.border-0
            .card-header
              strong #{settings.locale.mkt_select} (#{settings.market_count[net]})
            div#exchange_overview.card-body
              table#markets-table.table.table-bordered.bottom-border-0.market-table(style='border-top:0;margin:0 !important;')
                thead
                  tr
                    th.text-center
                    th.full.text-center #{settings.locale.mkt_exchange}
                    th.text-center #{settings.locale.mkt_trade}
                    th.full.text-center #{settings.locale.mkt_bid}
                    th.full.text-center #{settings.locale.mkt_ask}
                    th.text-center #{settings.locale.mkt_last}
                    th.full.text-center #{settings.locale.mkt_low}
                      span.small.fw-normal  (24h)
                    th.full.text-center #{settings.locale.mkt_high}
                      span.small.fw-normal  (24h)
                    th.text-center !{'&Delta;'}
                      span.small.fw-normal  (24h)
                    th.half.text-center #{settings.locale.mkt_volume}
                      span.small.fw-normal  (24h&nbsp;Trade)
                    th.text-center #{settings.locale.mkt_volume}
                      span.small.fw-normal  (24h&nbsp;#{marketdata.reverse ? marketdata.exchange : marketdata.coin})
                tbody
                  - let volumeCoin = 0
                  each mkt in mmdata
                    if mkt.market != null && mkt.ext_market_url != null
                      if mkt.summary
                        if mkt.summary.volume && !isNaN(mkt.summary.volume)
                          - volumeCoin = Number(volumeCoin) + Number(mkt.reverse ? mkt.summary.volume_pair : mkt.summary.volume)
                      - const isActive = mkt.market.toLowerCase() === marketdata.market_name.toLowerCase() && mkt.pair_symbol.toLowerCase() === marketdata.exchange.toLowerCase()
                      - var market = '-'
                      - var trade = '-'
                      - var marketVolume = '-'
                      - var tradeVolume = '-'
                      - var bid = '-'
                      - if (mkt.summary) {
                      -  market = mkt.reverse ? mkt.summary.volume_pair : mkt.summary.volume
                      -  trade = mkt.reverse ? mkt.summary.volume : mkt.summary.volume_pair
                      -  marketVolume = !isNaN(market) ? settings.formatDecimal(market, 2, 2) : '-'
                      -  tradeVolume = !isNaN(trade) ? settings.formatDecimal(trade, 2, 2) : '-'
                      - }
                      tr(class=(isActive == true ? 'active': ''))
                        td.text-center
                          if mkt.logo && mkt.logo != ''
                            a(href='/markets/' + mkt.market + '/' + mkt.coin_symbol + '/' + mkt.pair_symbol + '/' + net)
                              img.align-top.market-logo(src='data:image/png;base64,' + mkt.logo, title=mkt.market_name + ' (' + mkt.pair_symbol + ')', alt=mkt.market_name + ' (' + mkt.pair_symbol + ')')
                        td.full.text-start
                          a(href='/markets/' + mkt.market + '/' + mkt.coin_symbol + '/' + mkt.pair_symbol + '/' + net) #{mkt.market}
                        td.text-start
                          small #{mkt.reverse ? mkt.coin_symbol : mkt.pair_symbol}
                        td.full.text-end 
                          small #{mkt.summary && !isNaN(mkt.summary.bid) && mkt.summary.bid > 0 ? settings.formatCurrency(mkt.summary.bid, marketdata.exchange) : '-'} 
                        td.full.text-end 
                          small #{mkt.summary && !isNaN(mkt.summary.ask) && mkt.summary.ask > 0 ? settings.formatCurrency(mkt.summary.ask, marketdata.exchange) : '-'} 
                        td.text-end 
                          small #{mkt.summary && !isNaN(mkt.summary.last) && mkt.summary.last > 0? settings.formatCurrency(mkt.summary.last, marketdata.exchange) : '-'} 
                        td.full.text-end 
                          small #{mkt.summary && mkt.summary.low && !isNaN(mkt.summary.low) ? settings.formatCurrency(mkt.summary.low, marketdata.exchange) : '-'} 
                        td.full.text-end 
                          small #{mkt.summary && mkt.summary.high && !isNaN(mkt.summary.high) ? settings.formatCurrency(mkt.summary.high, marketdata.exchange) : '-'} 
                        td.text-end 
                          small #{mkt.summary && mkt.summary.change && !isNaN(mkt.summary.change) ? mkt.summary.change.toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true}) : '-'}
                        td.half.text-end 
                          small #{tradeVolume}  
                        td.text-end 
                          small #{marketVolume} 
                  td 
                  td.full 
                  td 
                  td.full.text-end 
                  td.full.text-end 
                  td.text-end 
                  td.full.text-end 
                  td.full.text-end 
                  td.text-end 
                  td.half.text-end 
                  td.text-end 
                    small #{Number(volumeCoin) > 0 ? settings.formatCurrency(volumeCoin, 'BTRM') : '-'}
            
    if marketdata.data != null && ((marketdata.data.buys != null && marketdata.data.buys.length > 0) || (marketdata.data.sells != null && marketdata.data.sells.length > 0) || (marketdata.data.history != null && marketdata.data.history.length > 0))
      block market_view
        script.
          $(document).ready(function() {
            var jqplot = null;
            var chartData = !{(marketdata.data.chartdata == 'null' || marketdata.data.chartdata == '' || marketdata.data.chartdata == '[]' ? 'null' : marketdata.data.chartdata)};

            if (chartData != null && chartData.length > 0) {
              jqplot = $.jqplot('chart', [chartData], {
                seriesDefaults: {
                  yaxis: 'y2axis'
                },
                axes: {
                  xaxis: {
                    renderer: $.jqplot.DateAxisRenderer,
                    tickOptions: { formatString: '%R' },
                    tickInterval: '2 hours'
                  },
                  y2axis: {
                    tickOptions: { formatString: '%.8f' },
                  }
                },
                series: [
                  {
                    renderer: $.jqplot.OHLCRenderer,
                    rendererOptions: {
                      candleStick: true,
                      upBodyColor: 'rgba(213,255,87)',
                      downBodyColor: '#e2595b',
                      fillUpBody: true,
                      fillDownBody: true
                    }
                  }
                ],
                grid: {
                  backgroundColor: 'transparent',
                  gridLineColor: 'rgba(100,100,100,0.5)',
                  shadow: true,
                  shadowAngle: 45,
                  shadowOffset: 1.5,
                  shadowWidth: 3,
                  shadowDepth: 3
                },
                highlighter: {
                  show: true,
                  showMarker: false,
                  tooltipAxes: 'xy',
                  yvalues: 4,
                  formatString: '<table class="jqplot-highlighter"> \
                  <tr><td>time:</td><td>%s</td></tr> \
                  <tr><td>open:</td><td>%s</td></tr> \
                  <tr><td>hi:</td><td>%s</td></tr> \
                  <tr><td>low:</td><td>%s</td></tr> \
                  <tr><td>close:</td><td>%s</td></tr></table>'
                }
              });
              $('#chart').css('width', '100%');
            }
            $(window).resize(function () {
              if (jqplot != null && $('#chart').is(':visible'))
                jqplot.replot({ resetAxes: false });
            });
          });
        .row
          .col-md-12.cardSpacer
            div#exchange-table-wrapper.card.card-default.border-0
              .card-header
                if marketdata.market_logo != null && marketdata.market_logo != ''
                  img.align-top.market-logo(src='data:image/png;base64,' + marketdata.market_logo, title=marketdata.market_name + ' Logo', alt=marketdata.market_name + ' Logo')
                strong #{marketdata.market_name}
                span.small.fw-normal  (#{marketdata.coin}/#{marketdata.exchange})
                strong  - #{settings.locale.mkt_hours}
                if marketdata.data.chartdata == 'null' || marketdata.data.chartdata == '' || marketdata.data.chartdata == '[]'
                  span.fas.fa-chart-line.float-end.view-chart-disabled.market-toggle(style='cursor: pointer;color: var(--bs-body-color);', data-bs-toggle='tooltip', data-bs-placement='bottom', title=settings.locale.mkt_no_chart)
              .card-body
                table#market-summary.table.table-bordered.bottom-border-0.summary-table.single-row-table(style='border-top:0;margin-top:0 !important;')
                  thead(style='visibility: collapse !important;')
                    tr
                      th
                      th
                  tbody
                    tr
                      if marketdata.data.summary.change != null || (marketdata.data.summary.last != null && marketdata.data.summary.prev != null)
                        if marketdata.data.summary.change != null
                          if marketdata.data.summary.change == '' || marketdata.data.summary.change == '-'
                            - var price_change = "0.00";
                          else
                            - var price_change = Number(marketdata.data.summary.change).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
                        else if marketdata.data.summary.last != 0
                          - var price_change = Number((100 - ((parseFloat(marketdata.data.summary.prev) / parseFloat(marketdata.data.summary.last)) * 100))).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
                        else
                          - var price_change = Number(0).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
                        - var splitChange = price_change.split(".");
                        td #{settings.locale.mkt_change}
                        if price_change > 0
                          td.text-success.fw-bold +#{splitChange[0]}.
                            span.decimal #{splitChange[1]}
                            span  %
                        else if price_change < 0
                          td.text-danger.fw-bold #{splitChange[0]}.
                            span.decimal #{splitChange[1]}
                            span  %
                        else
                          td.fw-bold #{splitChange[0]}.
                            span.decimal #{splitChange[1]}
                            span  %
                    if marketdata.data.summary.initial != null
                      tr
                        - var initialValue = settings.formatCurrency(marketdata.data.summary.initial, marketdata.exchange);
                        - var splitLast = initialValue.split(".");
                        td #{settings.locale.mkt_initial}
                        td #{splitLast[0]}.
                          span.decimal #{splitLast[1]}
                    if marketdata.data.summary.last != null
                      tr
                        - var lastValue = settings.formatCurrency(marketdata.data.summary.last, marketdata.exchange);
                        - var splitLast = lastValue.split(".");
                        td #{settings.locale.mkt_last}
                        td #{splitLast[0]}.
                          span.decimal #{splitLast[1]}
                    if marketdata.data.summary.high != null
                      tr
                        - var highValue = settings.formatCurrency(marketdata.data.summary.high, marketdata.exchange);
                        - var splitHigh = highValue.split(".");
                        td #{settings.locale.mkt_high}
                        td #{splitHigh[0]}.
                          span.decimal #{splitHigh[1]}
                    if marketdata.data.summary.low != null
                      tr
                        - var lowValue = settings.formatCurrency(marketdata.data.summary.low, marketdata.exchange);
                        - var splitLow = lowValue.split(".");
                        td #{settings.locale.mkt_low}
                        td #{splitLow[0]}.
                          span.decimal #{splitLow[1]}
                    if marketdata.data.summary.volume != null
                      tr
                        - var volumeValue = settings.formatCurrency(marketdata.data.summary.volume, marketdata.coin);
                        - var splitVolume = volumeValue.split(".");
                        td #{settings.locale.mkt_volume}
                          span.small.fw-normal  (#{marketdata.coin})
                        td #{splitVolume[0]}.
                          span.decimal #{splitVolume[1]}
                    if marketdata.data.summary.volume_pair != null
                      tr
                        - var volumeCoinValue = settings.formatCurrency(marketdata.data.summary.volume_pair, 'BTC');
                        - var splitvolumeCoin = volumeCoinValue.split(".");
                        td #{settings.locale.mkt_volume}
                          span.small.fw-normal  (#{marketdata.exchange})
                        td #{splitvolumeCoin[0]}.
                          span.decimal #{splitvolumeCoin[1]}
                    if marketdata.data.summary.bid != null
                      tr
                        - var bidValue = settings.formatCurrency(marketdata.data.summary.bid, marketdata.exchange);
                        - var splitBid = bidValue.split(".");
                        td #{settings.locale.mkt_top_bid}
                        td #{splitBid[0]}.
                          span.decimal #{splitBid[1]}
                    if marketdata.data.summary.ask != null
                      tr
                        - var askValue = settings.formatCurrency(marketdata.data.summary.ask, marketdata.exchange);
                        - var splitAsk = askValue.split(".");
                        td #{settings.locale.mkt_top_ask}
                        td #{splitAsk[0]}.
                          span.decimal #{splitAsk[1]}
                    if marketdata.data.summary.prev != null
                      tr
                        - var prevValue = settings.formatCurrency(marketdata.data.summary.prev, marketdata.exchange);
                        - var splitPrev = prevValue.split(".");
                        td #{settings.locale.mkt_yesterday}
                        td #{splitPrev[0]}.
                          span.decimal #{splitPrev[1]}
        if marketdata.data.chartdata != 'null' && marketdata.data.chartdata != '' && marketdata.data.chartdata != '[]'
          #marketChart.row
            .col-md-12.cardSpacer
              .card.card-default.border-0
                .card-header
                  if marketdata.market_logo != null && marketdata.market_logo != ''
                    img.align-top.market-logo(src='data:image/png;base64,' + marketdata.market_logo, title=marketdata.market_name + ' Logo', alt=marketdata.market_name + ' Logo')
                  strong #{marketdata.market_name} - #{marketdata.coin}/#{marketdata.exchange} - #{settings.locale.mkt_hours}
                .card-body
                  div#chart(style='height:300px;')
        div#market_offers_wrapper.row
          .col-md-6.col-xs-12.cardSpacer
            .card.card-default.border-0.wrapper-border-0
              .card-header(style='border-bottom-width:1px;')
                if marketdata.market_logo != null && marketdata.market_logo != ''
                  img.align-top.market-logo(src='data:image/png;base64,' + marketdata.market_logo, title=marketdata.market_name + ' Logo', alt=marketdata.market_name + ' Logo')
                strong(style='color:var(--bs-body-color)') #{settings.locale.mkt_buy_orders}
              table#buy-orders.table.table-bordered.order-table.bottom-border-0
                thead
                  - var sumBuys = 0;
                  - var totalBuys = 0;
                  each buy in marketdata.data.buys
                    - sumBuys = sumBuys + buy.quantity;
                    - totalBuys = totalBuys + (buy.quantity * buy.price);
                  - var splitSumBuys = settings.formatCurrency(sumBuys, marketdata.coin).split(".");
                  - var splitTotalBuys = settings.formatCurrency(totalBuys, marketdata.exchange).split(".");
                  tr
                    th.text-center #{settings.locale.mkt_price}
                      span.small.fw-normal  (#{marketdata.exchange})
                    th.text-center #{settings.locale.mkt_amount}
                      span.small.fw-normal  (#{marketdata.coin})
                    th.text-center #{settings.locale.mkt_total}
                      span.small.fw-normal  (#{marketdata.exchange})
                tbody
                  tr 
                    td.text-end 
                      span.small #{settings.locale.mkt_sum}
                    td.text-end #{splitSumBuys[0]}.
                        span.decimal #{splitSumBuys[1]}
                    td.text-end #{splitTotalBuys[0]}.
                      span.decimal #{splitTotalBuys[1]}
                  each buy in (marketdata.reverse ? marketdata.data.buys.reverse() : marketdata.data.buys)
                    - var price = settings.formatCurrency(buy.price, marketdata.exchange);
                    - var splitPrice = price.split(".");
                    - var quantity = settings.formatCurrency(buy.quantity, marketdata.coin);
                    - var splitQuantity = quantity.split(".");
                    if buy.total != null
                      - var total = settings.formatCurrency(buy.total, marketdata.exchange);
                    else
                      - var total = settings.formatCurrency(parseFloat(buy.price).toFixed(8) * parseFloat(buy.quantity).toFixed(8), marketdata.exchange);
                    - var splitTotal = total.split(".");
                    tr
                      td.text-end.text-success.fw-bold #{splitPrice[0]}.
                        span.decimal #{splitPrice[1]}
                      td.text-end #{splitQuantity[0]}.
                        span.decimal #{splitQuantity[1]}
                      td.text-end #{splitTotal[0]}.
                        span.decimal #{splitTotal[1]}
          .col-md-6.col-xs-12.cardSpacer
            .card.card-default.border-0.wrapper-border-0
              .card-header(style='border-bottom-width:1px;')
                if marketdata.market_logo != null && marketdata.market_logo != ''
                  img.align-top.market-logo(src='data:image/png;base64,' + marketdata.market_logo, title=marketdata.market_name + ' Logo', alt=marketdata.market_name + ' Logo')
                strong(style='color:var(--bs-body-color)') #{settings.locale.mkt_sell_orders}
              table#sell-orders.table.table-bordered.order-table.bottom-border-0
                - var sumSells = 0;
                - var totalSells = 0;
                each sell in marketdata.data.sells
                  - sumSells = sumSells + sell.quantity;
                  - totalSells = totalSells + (sell.quantity * sell.price);
                - var splitSumSells = settings.formatCurrency(sumSells, marketdata.coin).split(".");
                - var splitTotalSells = settings.formatCurrency(totalSells, marketdata.exchange).split(".");
                thead
                  tr
                    th.text-end #{settings.locale.mkt_price}
                      span.small.fw-normal  (#{marketdata.exchange})
                    th.text-end #{settings.locale.mkt_amount}
                      span.small.fw-normal  (#{marketdata.coin})
                    th.text-end #{settings.locale.mkt_total}
                      span.small.fw-normal  (#{marketdata.exchange})
                tbody
                  tr 
                    td.text-end
                      span.small #{settings.locale.mkt_sum}
                    td.text-end #{splitSumSells[0]}.
                        span.decimal #{splitSumSells[1]}
                    td.text-end #{splitTotalSells[0]}.
                      span.decimal #{splitTotalSells[1]}
                  each sell in marketdata.data.sells
                    - var price = settings.formatCurrency(sell.price, marketdata.exchange);
                    - var splitPrice = price.split(".");
                    - var quantity = settings.formatCurrency(sell.quantity, marketdata.coin);
                    - var splitQuantity = quantity.split(".");
                    if sell.total != null
                      - var total = settings.formatCurrency(sell.total, marketdata.exchange);
                    else
                      - var total = settings.formatCurrency(parseFloat(sell.price).toFixed(8) * parseFloat(sell.quantity).toFixed(8), marketdata.exchange);
                    - var splitTotal = total.split(".");
                    tr
                      td.text-end.text-danger.fw-bold #{splitPrice[0]}.
                        span.decimal #{splitPrice[1]}                  
                      td.text-end #{splitQuantity[0]}.
                        span.decimal #{splitQuantity[1]}
                      td.text-end #{splitTotal[0]}.
                        span.decimal #{splitTotal[1]}
        div#market_history_wrapper.row
          .col-md-12
            .card.card-default.border-0
              .card-header
                if marketdata.market_logo != null && marketdata.market_logo != ''
                  img.align-top.market-logo(src='data:image/png;base64,' + marketdata.market_logo, title=marketdata.market_name + ' Logo', alt=marketdata.market_name + ' Logo')
                strong #{settings.locale.mkt_trade_history.replace('{1}', marketdata.data.history.length)}
              table#history-table.table.table-bordered.table-paging(cellspacing='0')
                thead
                  tr
                    th.text-center #{settings.locale.mkt_price}
                      span.small.fw-normal  (#{marketdata.exchange})
                    th.text-center #{settings.locale.mkt_amount}
                      span.small.fw-normal  (#{marketdata.coin})
                    th.text-center #{settings.locale.mkt_total}
                      span.small.fw-normal  (#{marketdata.exchange})
                    th.text-center #{settings.locale.timestamp}
                tbody
                  each order in marketdata.data.history
                    if order.type != null
                      - var price = settings.formatCurrency(order.price, marketdata.exchange);
                      - var splitPrice = price.split(".");
                      - var quantity = settings.formatCurrency(order.quantity, marketdata.coin);
                      - var splitQuantity = quantity.split(".");
                      - var timestamp = settings.formatDateTime(order.timestamp, net, true)
                      if order.total != null
                        - var total = settings.formatCurrency(order.total, marketdata.exchange);
                      else
                        - var total = settings.formatCurrency(parseFloat(order.price).toFixed(8) * parseFloat(order.quantity).toFixed(8), marketdata.exchange);
                      - var splitTotal = total.split(".");
                      if order.type == 0
                        tr
                          td.text-end.text-success.fw-bold #{splitPrice[0]}.
                            span.decimal #{splitPrice[1]}   
                          td.text-end #{splitQuantity[0]}.
                            span.decimal #{splitQuantity[1]}
                          td.text-end #{splitTotal[0]}.
                            span.decimal #{splitTotal[1]}
                          td.text-center
                            small !{timestamp}
                      else
                        tr
                          td.text-end.text-danger.fw-bold #{splitPrice[0]}.
                            span.decimal #{splitPrice[1]}
                          td.text-end #{splitQuantity[0]}.
                            span.decimal #{splitQuantity[1]}
                          td.text-end #{splitTotal[0]}.
                            span.decimal #{splitTotal[1]}
                          td.text-center
                            small !{timestamp}
    else
      .alert.alert-danger.alert-dismissible.fade.show(role='alert')
        button.btn-close(type='button', data-bs-dismiss='alert')
        .cardSpacer
          span.fas.fa-exclamation-circle(style='margin-right:5px')
          strong #{marketdata.market_name} #{settings.locale.ex_error}
        div This market has no data to display.